Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDEQ
    AS
    ASYNC
    AT
    AWAIT
    BREAK
    CARETEQ
    CONST
    CONTINUE
    CRATE
    DEDENT
    DOLLAR
    DOTDOTDOT
    DOTDOTEQ
    DYN
    ENUM
    EXTERN
    FALSE
    FATARROW
    IDENT
    IMPL
    IS
    ISEXCLAMATION
    LOOP
    MATCH
    MINUSEQ
    MOD
    MOVE
    NOT
    OREQ
    PATHSEP
    PERCENTEQ
    PLUSEQ
    POUND
    PUB
    QUESTION
    QUESTIONQUESTION
    RARROW
    REF
    SELFLOWERCASE
    SELFUPERCASE
    SHL
    SHLEQ
    SHR
    SHREQ
    SLASHEQ
    STAREQ
    STATIC
    STRUCT
    SUPER
    TILDE
    TRAIT
    TRUE
    TYPE
    UNDERSCORE
    UNION
    UNSAFE
    USE
    WHERE

Grammar

Rule 0     S' -> program
Rule 1     program -> funcdecl
Rule 2     program -> funcdecl program
Rule 3     program -> declvar
Rule 4     program -> declvar program
Rule 5     declvar -> LET assign SEMI
Rule 6     declvar -> LET MUT assign SEMI
Rule 7     funcdecl -> signature body
Rule 8     signature -> FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES
Rule 9     signature -> FN ID LEFTPARENTHESES RIGHTPARENTHESES
Rule 10    sigparams -> ID COLON tipo
Rule 11    sigparams -> ID COLON tipo COMMA sigparams
Rule 12    stms -> stm
Rule 13    stms -> program
Rule 14    stms -> stm stms
Rule 15    body -> LEFTBRACKET stms RIGHTBRACKET
Rule 16    bodyorstm -> stm
Rule 17    bodyorstm -> body
Rule 18    stm -> exp SEMI
Rule 19    stm -> assign SEMI
Rule 20    stm -> WHILE exp bodyorstm
Rule 21    stm -> IF exp bodyorstm
Rule 22    stm -> IF exp bodyorstm ELSE stm
Rule 23    stm -> FOR ID IN stm2 body
Rule 24    stm -> FOR ID IN ID body
Rule 25    stm -> RETURN exp SEMI
Rule 26    stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES
Rule 27    stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES
Rule 28    exp -> exp STAR exp1
Rule 29    exp -> exp1
Rule 30    exp -> exp SLASH exp1
Rule 31    exp -> exp PERCENT exp1
Rule 32    exp1 -> exp1 PLUS exp2
Rule 33    exp1 -> exp2
Rule 34    exp1 -> exp1 MINUS exp2
Rule 35    exp2 -> exp2 AND exp3
Rule 36    exp2 -> exp3
Rule 37    exp3 -> exp3 CARET exp4
Rule 38    exp3 -> exp4
Rule 39    exp4 -> exp4 OR exp5
Rule 40    exp4 -> exp5
Rule 41    exp5 -> exp5 EQEQ exp6
Rule 42    exp5 -> exp6
Rule 43    exp5 -> exp5 NE exp6
Rule 44    exp5 -> exp5 LT exp6
Rule 45    exp5 -> exp5 GT exp6
Rule 46    exp5 -> exp5 GE exp6
Rule 47    exp5 -> exp5 LE exp6
Rule 48    exp6 -> exp6 ANDAND exp7
Rule 49    exp6 -> exp7
Rule 50    exp7 -> exp7 OROR exp8
Rule 51    exp7 -> exp8
Rule 52    exp8 -> NUMBER
Rule 53    exp8 -> ID
Rule 54    exp8 -> call
Rule 55    call -> ID LEFTPARENTHESES params RIGHTPARENTHESES
Rule 56    call -> ID LEFTPARENTHESES RIGHTPARENTHESES
Rule 57    params -> exp COMMA params
Rule 58    params -> exp
Rule 59    assign -> ID EQ exp
Rule 60    tipo -> ITT
Rule 61    tipo -> UTT
Rule 62    tipo -> FTT
Rule 63    tipo -> STRING
Rule 64    tipo -> CHAR

Terminals, with rules where they appear

AND                  : 35
ANDAND               : 48
ANDEQ                : 
AS                   : 
ASYNC                : 
AT                   : 
AWAIT                : 
BREAK                : 
CARET                : 37
CARETEQ              : 
CHAR                 : 64
COLON                : 10 11
COMMA                : 11 57
CONST                : 
CONTINUE             : 
CRATE                : 
DEDENT               : 
DOLLAR               : 
DOT                  : 27
DOTDOT               : 26 27
DOTDOTDOT            : 
DOTDOTEQ             : 
DYN                  : 
ELSE                 : 22
ENUM                 : 
EQ                   : 59
EQEQ                 : 41
EXTERN               : 
FALSE                : 
FATARROW             : 
FN                   : 8 9
FOR                  : 23 24
FTT                  : 62
GE                   : 46
GT                   : 45
ID                   : 8 9 10 11 23 24 24 27 53 55 56 59
IDENT                : 
IF                   : 21 22
IMPL                 : 
IN                   : 23 24
IS                   : 
ISEXCLAMATION        : 
ITT                  : 60
LE                   : 47
LEFTBRACKET          : 15
LEFTPARENTHESES      : 8 9 26 27 27 55 56
LET                  : 5 6
LOOP                 : 
LT                   : 44
MATCH                : 
MINUS                : 34
MINUSEQ              : 
MOD                  : 
MOVE                 : 
MUT                  : 6
NE                   : 43
NOT                  : 
NUMBER               : 52
OR                   : 39
OREQ                 : 
OROR                 : 50
PATHSEP              : 
PERCENT              : 31
PERCENTEQ            : 
PLUS                 : 32
PLUSEQ               : 
POUND                : 
PUB                  : 
QUESTION             : 
QUESTIONQUESTION     : 
RARROW               : 
REF                  : 
RETURN               : 25
RIGHTBRACKET         : 15
RIGHTPARENTHESES     : 8 9 26 27 27 55 56
SELFLOWERCASE        : 
SELFUPERCASE         : 
SEMI                 : 5 6 18 19 25
SHL                  : 
SHLEQ                : 
SHR                  : 
SHREQ                : 
SLASH                : 30
SLASHEQ              : 
STAR                 : 28
STAREQ               : 
STATIC               : 
STRING               : 63
STRUCT               : 
SUPER                : 
TILDE                : 
TRAIT                : 
TRUE                 : 
TYPE                 : 
UNDERSCORE           : 
UNION                : 
UNSAFE               : 
USE                  : 
UTT                  : 61
WHERE                : 
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

assign               : 5 6 19
body                 : 7 17 23 24
bodyorstm            : 20 21 22
call                 : 54
declvar              : 3 4
exp                  : 18 20 21 22 25 26 26 27 27 28 30 31 57 58 59
exp1                 : 28 29 30 31 32 34
exp2                 : 32 33 34 35
exp3                 : 35 36 37
exp4                 : 37 38 39
exp5                 : 39 40 41 43 44 45 46 47
exp6                 : 41 42 43 44 45 46 47 48
exp7                 : 48 49 50
exp8                 : 50 51
funcdecl             : 1 2
params               : 55 57
program              : 2 4 13 0
signature            : 7
sigparams            : 8 11
stm                  : 12 14 16 22
stm2                 : 23
stms                 : 14 15
tipo                 : 10 11

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . declvar
    (4) program -> . declvar program
    (7) funcdecl -> . signature body
    (5) declvar -> . LET assign SEMI
    (6) declvar -> . LET MUT assign SEMI
    (8) signature -> . FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES
    (9) signature -> . FN ID LEFTPARENTHESES RIGHTPARENTHESES

    LET             shift and go to state 5
    FN              shift and go to state 6

    program                        shift and go to state 1
    funcdecl                       shift and go to state 2
    declvar                        shift and go to state 3
    signature                      shift and go to state 4

state 1

    (0) S' -> program .



state 2

    (1) program -> funcdecl .
    (2) program -> funcdecl . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . declvar
    (4) program -> . declvar program
    (7) funcdecl -> . signature body
    (5) declvar -> . LET assign SEMI
    (6) declvar -> . LET MUT assign SEMI
    (8) signature -> . FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES
    (9) signature -> . FN ID LEFTPARENTHESES RIGHTPARENTHESES

    $end            reduce using rule 1 (program -> funcdecl .)
    RIGHTBRACKET    reduce using rule 1 (program -> funcdecl .)
    LET             shift and go to state 5
    FN              shift and go to state 6

    funcdecl                       shift and go to state 2
    program                        shift and go to state 7
    declvar                        shift and go to state 3
    signature                      shift and go to state 4

state 3

    (3) program -> declvar .
    (4) program -> declvar . program
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . declvar
    (4) program -> . declvar program
    (7) funcdecl -> . signature body
    (5) declvar -> . LET assign SEMI
    (6) declvar -> . LET MUT assign SEMI
    (8) signature -> . FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES
    (9) signature -> . FN ID LEFTPARENTHESES RIGHTPARENTHESES

    $end            reduce using rule 3 (program -> declvar .)
    RIGHTBRACKET    reduce using rule 3 (program -> declvar .)
    LET             shift and go to state 5
    FN              shift and go to state 6

    declvar                        shift and go to state 3
    program                        shift and go to state 8
    funcdecl                       shift and go to state 2
    signature                      shift and go to state 4

state 4

    (7) funcdecl -> signature . body
    (15) body -> . LEFTBRACKET stms RIGHTBRACKET

    LEFTBRACKET     shift and go to state 10

    body                           shift and go to state 9

state 5

    (5) declvar -> LET . assign SEMI
    (6) declvar -> LET . MUT assign SEMI
    (59) assign -> . ID EQ exp

    MUT             shift and go to state 12
    ID              shift and go to state 13

    assign                         shift and go to state 11

state 6

    (8) signature -> FN . ID LEFTPARENTHESES sigparams RIGHTPARENTHESES
    (9) signature -> FN . ID LEFTPARENTHESES RIGHTPARENTHESES

    ID              shift and go to state 14


state 7

    (2) program -> funcdecl program .

    $end            reduce using rule 2 (program -> funcdecl program .)
    RIGHTBRACKET    reduce using rule 2 (program -> funcdecl program .)


state 8

    (4) program -> declvar program .

    $end            reduce using rule 4 (program -> declvar program .)
    RIGHTBRACKET    reduce using rule 4 (program -> declvar program .)


state 9

    (7) funcdecl -> signature body .

    LET             reduce using rule 7 (funcdecl -> signature body .)
    FN              reduce using rule 7 (funcdecl -> signature body .)
    $end            reduce using rule 7 (funcdecl -> signature body .)
    RIGHTBRACKET    reduce using rule 7 (funcdecl -> signature body .)


state 10

    (15) body -> LEFTBRACKET . stms RIGHTBRACKET
    (12) stms -> . stm
    (13) stms -> . program
    (14) stms -> . stm stms
    (18) stm -> . exp SEMI
    (19) stm -> . assign SEMI
    (20) stm -> . WHILE exp bodyorstm
    (21) stm -> . IF exp bodyorstm
    (22) stm -> . IF exp bodyorstm ELSE stm
    (23) stm -> . FOR ID IN stm2 body
    (24) stm -> . FOR ID IN ID body
    (25) stm -> . RETURN exp SEMI
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . declvar
    (4) program -> . declvar program
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (59) assign -> . ID EQ exp
    (7) funcdecl -> . signature body
    (5) declvar -> . LET assign SEMI
    (6) declvar -> . LET MUT assign SEMI
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (8) signature -> . FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES
    (9) signature -> . FN ID LEFTPARENTHESES RIGHTPARENTHESES
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    WHILE           shift and go to state 20
    IF              shift and go to state 21
    FOR             shift and go to state 22
    RETURN          shift and go to state 24
    ID              shift and go to state 23
    LET             shift and go to state 5
    FN              shift and go to state 6
    NUMBER          shift and go to state 33

    stms                           shift and go to state 15
    stm                            shift and go to state 16
    program                        shift and go to state 17
    exp                            shift and go to state 18
    assign                         shift and go to state 19
    funcdecl                       shift and go to state 2
    declvar                        shift and go to state 3
    exp1                           shift and go to state 25
    signature                      shift and go to state 4
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 11

    (5) declvar -> LET assign . SEMI

    SEMI            shift and go to state 35


state 12

    (6) declvar -> LET MUT . assign SEMI
    (59) assign -> . ID EQ exp

    ID              shift and go to state 13

    assign                         shift and go to state 36

state 13

    (59) assign -> ID . EQ exp

    EQ              shift and go to state 37


state 14

    (8) signature -> FN ID . LEFTPARENTHESES sigparams RIGHTPARENTHESES
    (9) signature -> FN ID . LEFTPARENTHESES RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 38


state 15

    (15) body -> LEFTBRACKET stms . RIGHTBRACKET

    RIGHTBRACKET    shift and go to state 39


state 16

    (12) stms -> stm .
    (14) stms -> stm . stms
    (12) stms -> . stm
    (13) stms -> . program
    (14) stms -> . stm stms
    (18) stm -> . exp SEMI
    (19) stm -> . assign SEMI
    (20) stm -> . WHILE exp bodyorstm
    (21) stm -> . IF exp bodyorstm
    (22) stm -> . IF exp bodyorstm ELSE stm
    (23) stm -> . FOR ID IN stm2 body
    (24) stm -> . FOR ID IN ID body
    (25) stm -> . RETURN exp SEMI
    (1) program -> . funcdecl
    (2) program -> . funcdecl program
    (3) program -> . declvar
    (4) program -> . declvar program
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (59) assign -> . ID EQ exp
    (7) funcdecl -> . signature body
    (5) declvar -> . LET assign SEMI
    (6) declvar -> . LET MUT assign SEMI
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (8) signature -> . FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES
    (9) signature -> . FN ID LEFTPARENTHESES RIGHTPARENTHESES
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    RIGHTBRACKET    reduce using rule 12 (stms -> stm .)
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    FOR             shift and go to state 22
    RETURN          shift and go to state 24
    ID              shift and go to state 23
    LET             shift and go to state 5
    FN              shift and go to state 6
    NUMBER          shift and go to state 33

    stm                            shift and go to state 16
    stms                           shift and go to state 40
    program                        shift and go to state 17
    exp                            shift and go to state 18
    assign                         shift and go to state 19
    funcdecl                       shift and go to state 2
    declvar                        shift and go to state 3
    exp1                           shift and go to state 25
    signature                      shift and go to state 4
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 17

    (13) stms -> program .

    RIGHTBRACKET    reduce using rule 13 (stms -> program .)


state 18

    (18) stm -> exp . SEMI
    (28) exp -> exp . STAR exp1
    (30) exp -> exp . SLASH exp1
    (31) exp -> exp . PERCENT exp1

    SEMI            shift and go to state 41
    STAR            shift and go to state 42
    SLASH           shift and go to state 43
    PERCENT         shift and go to state 44


state 19

    (19) stm -> assign . SEMI

    SEMI            shift and go to state 45


state 20

    (20) stm -> WHILE . exp bodyorstm
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp                            shift and go to state 46
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 21

    (21) stm -> IF . exp bodyorstm
    (22) stm -> IF . exp bodyorstm ELSE stm
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp                            shift and go to state 48
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 22

    (23) stm -> FOR . ID IN stm2 body
    (24) stm -> FOR . ID IN ID body

    ID              shift and go to state 49


state 23

    (59) assign -> ID . EQ exp
    (53) exp8 -> ID .
    (55) call -> ID . LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> ID . LEFTPARENTHESES RIGHTPARENTHESES

    EQ              shift and go to state 37
    OROR            reduce using rule 53 (exp8 -> ID .)
    ANDAND          reduce using rule 53 (exp8 -> ID .)
    EQEQ            reduce using rule 53 (exp8 -> ID .)
    NE              reduce using rule 53 (exp8 -> ID .)
    LT              reduce using rule 53 (exp8 -> ID .)
    GT              reduce using rule 53 (exp8 -> ID .)
    GE              reduce using rule 53 (exp8 -> ID .)
    LE              reduce using rule 53 (exp8 -> ID .)
    OR              reduce using rule 53 (exp8 -> ID .)
    CARET           reduce using rule 53 (exp8 -> ID .)
    AND             reduce using rule 53 (exp8 -> ID .)
    PLUS            reduce using rule 53 (exp8 -> ID .)
    MINUS           reduce using rule 53 (exp8 -> ID .)
    SEMI            reduce using rule 53 (exp8 -> ID .)
    STAR            reduce using rule 53 (exp8 -> ID .)
    SLASH           reduce using rule 53 (exp8 -> ID .)
    PERCENT         reduce using rule 53 (exp8 -> ID .)
    LEFTPARENTHESES shift and go to state 50


state 24

    (25) stm -> RETURN . exp SEMI
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp                            shift and go to state 51
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 25

    (29) exp -> exp1 .
    (32) exp1 -> exp1 . PLUS exp2
    (34) exp1 -> exp1 . MINUS exp2

    SEMI            reduce using rule 29 (exp -> exp1 .)
    STAR            reduce using rule 29 (exp -> exp1 .)
    SLASH           reduce using rule 29 (exp -> exp1 .)
    PERCENT         reduce using rule 29 (exp -> exp1 .)
    WHILE           reduce using rule 29 (exp -> exp1 .)
    IF              reduce using rule 29 (exp -> exp1 .)
    FOR             reduce using rule 29 (exp -> exp1 .)
    RETURN          reduce using rule 29 (exp -> exp1 .)
    LEFTBRACKET     reduce using rule 29 (exp -> exp1 .)
    ID              reduce using rule 29 (exp -> exp1 .)
    NUMBER          reduce using rule 29 (exp -> exp1 .)
    COMMA           reduce using rule 29 (exp -> exp1 .)
    RIGHTPARENTHESES reduce using rule 29 (exp -> exp1 .)
    DOTDOT          reduce using rule 29 (exp -> exp1 .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53


state 26

    (33) exp1 -> exp2 .
    (35) exp2 -> exp2 . AND exp3

    PLUS            reduce using rule 33 (exp1 -> exp2 .)
    MINUS           reduce using rule 33 (exp1 -> exp2 .)
    SEMI            reduce using rule 33 (exp1 -> exp2 .)
    STAR            reduce using rule 33 (exp1 -> exp2 .)
    SLASH           reduce using rule 33 (exp1 -> exp2 .)
    PERCENT         reduce using rule 33 (exp1 -> exp2 .)
    WHILE           reduce using rule 33 (exp1 -> exp2 .)
    IF              reduce using rule 33 (exp1 -> exp2 .)
    FOR             reduce using rule 33 (exp1 -> exp2 .)
    RETURN          reduce using rule 33 (exp1 -> exp2 .)
    LEFTBRACKET     reduce using rule 33 (exp1 -> exp2 .)
    ID              reduce using rule 33 (exp1 -> exp2 .)
    NUMBER          reduce using rule 33 (exp1 -> exp2 .)
    COMMA           reduce using rule 33 (exp1 -> exp2 .)
    RIGHTPARENTHESES reduce using rule 33 (exp1 -> exp2 .)
    DOTDOT          reduce using rule 33 (exp1 -> exp2 .)
    AND             shift and go to state 54


state 27

    (36) exp2 -> exp3 .
    (37) exp3 -> exp3 . CARET exp4

    AND             reduce using rule 36 (exp2 -> exp3 .)
    PLUS            reduce using rule 36 (exp2 -> exp3 .)
    MINUS           reduce using rule 36 (exp2 -> exp3 .)
    SEMI            reduce using rule 36 (exp2 -> exp3 .)
    STAR            reduce using rule 36 (exp2 -> exp3 .)
    SLASH           reduce using rule 36 (exp2 -> exp3 .)
    PERCENT         reduce using rule 36 (exp2 -> exp3 .)
    WHILE           reduce using rule 36 (exp2 -> exp3 .)
    IF              reduce using rule 36 (exp2 -> exp3 .)
    FOR             reduce using rule 36 (exp2 -> exp3 .)
    RETURN          reduce using rule 36 (exp2 -> exp3 .)
    LEFTBRACKET     reduce using rule 36 (exp2 -> exp3 .)
    ID              reduce using rule 36 (exp2 -> exp3 .)
    NUMBER          reduce using rule 36 (exp2 -> exp3 .)
    COMMA           reduce using rule 36 (exp2 -> exp3 .)
    RIGHTPARENTHESES reduce using rule 36 (exp2 -> exp3 .)
    DOTDOT          reduce using rule 36 (exp2 -> exp3 .)
    CARET           shift and go to state 55


state 28

    (38) exp3 -> exp4 .
    (39) exp4 -> exp4 . OR exp5

    CARET           reduce using rule 38 (exp3 -> exp4 .)
    AND             reduce using rule 38 (exp3 -> exp4 .)
    PLUS            reduce using rule 38 (exp3 -> exp4 .)
    MINUS           reduce using rule 38 (exp3 -> exp4 .)
    SEMI            reduce using rule 38 (exp3 -> exp4 .)
    STAR            reduce using rule 38 (exp3 -> exp4 .)
    SLASH           reduce using rule 38 (exp3 -> exp4 .)
    PERCENT         reduce using rule 38 (exp3 -> exp4 .)
    WHILE           reduce using rule 38 (exp3 -> exp4 .)
    IF              reduce using rule 38 (exp3 -> exp4 .)
    FOR             reduce using rule 38 (exp3 -> exp4 .)
    RETURN          reduce using rule 38 (exp3 -> exp4 .)
    LEFTBRACKET     reduce using rule 38 (exp3 -> exp4 .)
    ID              reduce using rule 38 (exp3 -> exp4 .)
    NUMBER          reduce using rule 38 (exp3 -> exp4 .)
    COMMA           reduce using rule 38 (exp3 -> exp4 .)
    RIGHTPARENTHESES reduce using rule 38 (exp3 -> exp4 .)
    DOTDOT          reduce using rule 38 (exp3 -> exp4 .)
    OR              shift and go to state 56


state 29

    (40) exp4 -> exp5 .
    (41) exp5 -> exp5 . EQEQ exp6
    (43) exp5 -> exp5 . NE exp6
    (44) exp5 -> exp5 . LT exp6
    (45) exp5 -> exp5 . GT exp6
    (46) exp5 -> exp5 . GE exp6
    (47) exp5 -> exp5 . LE exp6

    OR              reduce using rule 40 (exp4 -> exp5 .)
    CARET           reduce using rule 40 (exp4 -> exp5 .)
    AND             reduce using rule 40 (exp4 -> exp5 .)
    PLUS            reduce using rule 40 (exp4 -> exp5 .)
    MINUS           reduce using rule 40 (exp4 -> exp5 .)
    SEMI            reduce using rule 40 (exp4 -> exp5 .)
    STAR            reduce using rule 40 (exp4 -> exp5 .)
    SLASH           reduce using rule 40 (exp4 -> exp5 .)
    PERCENT         reduce using rule 40 (exp4 -> exp5 .)
    WHILE           reduce using rule 40 (exp4 -> exp5 .)
    IF              reduce using rule 40 (exp4 -> exp5 .)
    FOR             reduce using rule 40 (exp4 -> exp5 .)
    RETURN          reduce using rule 40 (exp4 -> exp5 .)
    LEFTBRACKET     reduce using rule 40 (exp4 -> exp5 .)
    ID              reduce using rule 40 (exp4 -> exp5 .)
    NUMBER          reduce using rule 40 (exp4 -> exp5 .)
    COMMA           reduce using rule 40 (exp4 -> exp5 .)
    RIGHTPARENTHESES reduce using rule 40 (exp4 -> exp5 .)
    DOTDOT          reduce using rule 40 (exp4 -> exp5 .)
    EQEQ            shift and go to state 57
    NE              shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LE              shift and go to state 62


state 30

    (42) exp5 -> exp6 .
    (48) exp6 -> exp6 . ANDAND exp7

    EQEQ            reduce using rule 42 (exp5 -> exp6 .)
    NE              reduce using rule 42 (exp5 -> exp6 .)
    LT              reduce using rule 42 (exp5 -> exp6 .)
    GT              reduce using rule 42 (exp5 -> exp6 .)
    GE              reduce using rule 42 (exp5 -> exp6 .)
    LE              reduce using rule 42 (exp5 -> exp6 .)
    OR              reduce using rule 42 (exp5 -> exp6 .)
    CARET           reduce using rule 42 (exp5 -> exp6 .)
    AND             reduce using rule 42 (exp5 -> exp6 .)
    PLUS            reduce using rule 42 (exp5 -> exp6 .)
    MINUS           reduce using rule 42 (exp5 -> exp6 .)
    SEMI            reduce using rule 42 (exp5 -> exp6 .)
    STAR            reduce using rule 42 (exp5 -> exp6 .)
    SLASH           reduce using rule 42 (exp5 -> exp6 .)
    PERCENT         reduce using rule 42 (exp5 -> exp6 .)
    WHILE           reduce using rule 42 (exp5 -> exp6 .)
    IF              reduce using rule 42 (exp5 -> exp6 .)
    FOR             reduce using rule 42 (exp5 -> exp6 .)
    RETURN          reduce using rule 42 (exp5 -> exp6 .)
    LEFTBRACKET     reduce using rule 42 (exp5 -> exp6 .)
    ID              reduce using rule 42 (exp5 -> exp6 .)
    NUMBER          reduce using rule 42 (exp5 -> exp6 .)
    COMMA           reduce using rule 42 (exp5 -> exp6 .)
    RIGHTPARENTHESES reduce using rule 42 (exp5 -> exp6 .)
    DOTDOT          reduce using rule 42 (exp5 -> exp6 .)
    ANDAND          shift and go to state 63


state 31

    (49) exp6 -> exp7 .
    (50) exp7 -> exp7 . OROR exp8

    ANDAND          reduce using rule 49 (exp6 -> exp7 .)
    EQEQ            reduce using rule 49 (exp6 -> exp7 .)
    NE              reduce using rule 49 (exp6 -> exp7 .)
    LT              reduce using rule 49 (exp6 -> exp7 .)
    GT              reduce using rule 49 (exp6 -> exp7 .)
    GE              reduce using rule 49 (exp6 -> exp7 .)
    LE              reduce using rule 49 (exp6 -> exp7 .)
    OR              reduce using rule 49 (exp6 -> exp7 .)
    CARET           reduce using rule 49 (exp6 -> exp7 .)
    AND             reduce using rule 49 (exp6 -> exp7 .)
    PLUS            reduce using rule 49 (exp6 -> exp7 .)
    MINUS           reduce using rule 49 (exp6 -> exp7 .)
    SEMI            reduce using rule 49 (exp6 -> exp7 .)
    STAR            reduce using rule 49 (exp6 -> exp7 .)
    SLASH           reduce using rule 49 (exp6 -> exp7 .)
    PERCENT         reduce using rule 49 (exp6 -> exp7 .)
    WHILE           reduce using rule 49 (exp6 -> exp7 .)
    IF              reduce using rule 49 (exp6 -> exp7 .)
    FOR             reduce using rule 49 (exp6 -> exp7 .)
    RETURN          reduce using rule 49 (exp6 -> exp7 .)
    LEFTBRACKET     reduce using rule 49 (exp6 -> exp7 .)
    ID              reduce using rule 49 (exp6 -> exp7 .)
    NUMBER          reduce using rule 49 (exp6 -> exp7 .)
    COMMA           reduce using rule 49 (exp6 -> exp7 .)
    RIGHTPARENTHESES reduce using rule 49 (exp6 -> exp7 .)
    DOTDOT          reduce using rule 49 (exp6 -> exp7 .)
    OROR            shift and go to state 64


state 32

    (51) exp7 -> exp8 .

    OROR            reduce using rule 51 (exp7 -> exp8 .)
    ANDAND          reduce using rule 51 (exp7 -> exp8 .)
    EQEQ            reduce using rule 51 (exp7 -> exp8 .)
    NE              reduce using rule 51 (exp7 -> exp8 .)
    LT              reduce using rule 51 (exp7 -> exp8 .)
    GT              reduce using rule 51 (exp7 -> exp8 .)
    GE              reduce using rule 51 (exp7 -> exp8 .)
    LE              reduce using rule 51 (exp7 -> exp8 .)
    OR              reduce using rule 51 (exp7 -> exp8 .)
    CARET           reduce using rule 51 (exp7 -> exp8 .)
    AND             reduce using rule 51 (exp7 -> exp8 .)
    PLUS            reduce using rule 51 (exp7 -> exp8 .)
    MINUS           reduce using rule 51 (exp7 -> exp8 .)
    SEMI            reduce using rule 51 (exp7 -> exp8 .)
    STAR            reduce using rule 51 (exp7 -> exp8 .)
    SLASH           reduce using rule 51 (exp7 -> exp8 .)
    PERCENT         reduce using rule 51 (exp7 -> exp8 .)
    WHILE           reduce using rule 51 (exp7 -> exp8 .)
    IF              reduce using rule 51 (exp7 -> exp8 .)
    FOR             reduce using rule 51 (exp7 -> exp8 .)
    RETURN          reduce using rule 51 (exp7 -> exp8 .)
    LEFTBRACKET     reduce using rule 51 (exp7 -> exp8 .)
    ID              reduce using rule 51 (exp7 -> exp8 .)
    NUMBER          reduce using rule 51 (exp7 -> exp8 .)
    COMMA           reduce using rule 51 (exp7 -> exp8 .)
    RIGHTPARENTHESES reduce using rule 51 (exp7 -> exp8 .)
    DOTDOT          reduce using rule 51 (exp7 -> exp8 .)


state 33

    (52) exp8 -> NUMBER .

    OROR            reduce using rule 52 (exp8 -> NUMBER .)
    ANDAND          reduce using rule 52 (exp8 -> NUMBER .)
    EQEQ            reduce using rule 52 (exp8 -> NUMBER .)
    NE              reduce using rule 52 (exp8 -> NUMBER .)
    LT              reduce using rule 52 (exp8 -> NUMBER .)
    GT              reduce using rule 52 (exp8 -> NUMBER .)
    GE              reduce using rule 52 (exp8 -> NUMBER .)
    LE              reduce using rule 52 (exp8 -> NUMBER .)
    OR              reduce using rule 52 (exp8 -> NUMBER .)
    CARET           reduce using rule 52 (exp8 -> NUMBER .)
    AND             reduce using rule 52 (exp8 -> NUMBER .)
    PLUS            reduce using rule 52 (exp8 -> NUMBER .)
    MINUS           reduce using rule 52 (exp8 -> NUMBER .)
    SEMI            reduce using rule 52 (exp8 -> NUMBER .)
    STAR            reduce using rule 52 (exp8 -> NUMBER .)
    SLASH           reduce using rule 52 (exp8 -> NUMBER .)
    PERCENT         reduce using rule 52 (exp8 -> NUMBER .)
    WHILE           reduce using rule 52 (exp8 -> NUMBER .)
    IF              reduce using rule 52 (exp8 -> NUMBER .)
    FOR             reduce using rule 52 (exp8 -> NUMBER .)
    RETURN          reduce using rule 52 (exp8 -> NUMBER .)
    LEFTBRACKET     reduce using rule 52 (exp8 -> NUMBER .)
    ID              reduce using rule 52 (exp8 -> NUMBER .)
    NUMBER          reduce using rule 52 (exp8 -> NUMBER .)
    COMMA           reduce using rule 52 (exp8 -> NUMBER .)
    RIGHTPARENTHESES reduce using rule 52 (exp8 -> NUMBER .)
    DOTDOT          reduce using rule 52 (exp8 -> NUMBER .)


state 34

    (54) exp8 -> call .

    OROR            reduce using rule 54 (exp8 -> call .)
    ANDAND          reduce using rule 54 (exp8 -> call .)
    EQEQ            reduce using rule 54 (exp8 -> call .)
    NE              reduce using rule 54 (exp8 -> call .)
    LT              reduce using rule 54 (exp8 -> call .)
    GT              reduce using rule 54 (exp8 -> call .)
    GE              reduce using rule 54 (exp8 -> call .)
    LE              reduce using rule 54 (exp8 -> call .)
    OR              reduce using rule 54 (exp8 -> call .)
    CARET           reduce using rule 54 (exp8 -> call .)
    AND             reduce using rule 54 (exp8 -> call .)
    PLUS            reduce using rule 54 (exp8 -> call .)
    MINUS           reduce using rule 54 (exp8 -> call .)
    SEMI            reduce using rule 54 (exp8 -> call .)
    STAR            reduce using rule 54 (exp8 -> call .)
    SLASH           reduce using rule 54 (exp8 -> call .)
    PERCENT         reduce using rule 54 (exp8 -> call .)
    WHILE           reduce using rule 54 (exp8 -> call .)
    IF              reduce using rule 54 (exp8 -> call .)
    FOR             reduce using rule 54 (exp8 -> call .)
    RETURN          reduce using rule 54 (exp8 -> call .)
    LEFTBRACKET     reduce using rule 54 (exp8 -> call .)
    ID              reduce using rule 54 (exp8 -> call .)
    NUMBER          reduce using rule 54 (exp8 -> call .)
    COMMA           reduce using rule 54 (exp8 -> call .)
    RIGHTPARENTHESES reduce using rule 54 (exp8 -> call .)
    DOTDOT          reduce using rule 54 (exp8 -> call .)


state 35

    (5) declvar -> LET assign SEMI .

    LET             reduce using rule 5 (declvar -> LET assign SEMI .)
    FN              reduce using rule 5 (declvar -> LET assign SEMI .)
    $end            reduce using rule 5 (declvar -> LET assign SEMI .)
    RIGHTBRACKET    reduce using rule 5 (declvar -> LET assign SEMI .)


state 36

    (6) declvar -> LET MUT assign . SEMI

    SEMI            shift and go to state 65


state 37

    (59) assign -> ID EQ . exp
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp                            shift and go to state 66
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 38

    (8) signature -> FN ID LEFTPARENTHESES . sigparams RIGHTPARENTHESES
    (9) signature -> FN ID LEFTPARENTHESES . RIGHTPARENTHESES
    (10) sigparams -> . ID COLON tipo
    (11) sigparams -> . ID COLON tipo COMMA sigparams

    RIGHTPARENTHESES shift and go to state 69
    ID              shift and go to state 67

    sigparams                      shift and go to state 68

state 39

    (15) body -> LEFTBRACKET stms RIGHTBRACKET .

    LET             reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    FN              reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    $end            reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    RIGHTBRACKET    reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    WHILE           reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    IF              reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    FOR             reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    RETURN          reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    ID              reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    NUMBER          reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)
    ELSE            reduce using rule 15 (body -> LEFTBRACKET stms RIGHTBRACKET .)


state 40

    (14) stms -> stm stms .

    RIGHTBRACKET    reduce using rule 14 (stms -> stm stms .)


state 41

    (18) stm -> exp SEMI .

    WHILE           reduce using rule 18 (stm -> exp SEMI .)
    IF              reduce using rule 18 (stm -> exp SEMI .)
    FOR             reduce using rule 18 (stm -> exp SEMI .)
    RETURN          reduce using rule 18 (stm -> exp SEMI .)
    ID              reduce using rule 18 (stm -> exp SEMI .)
    LET             reduce using rule 18 (stm -> exp SEMI .)
    FN              reduce using rule 18 (stm -> exp SEMI .)
    NUMBER          reduce using rule 18 (stm -> exp SEMI .)
    RIGHTBRACKET    reduce using rule 18 (stm -> exp SEMI .)
    ELSE            reduce using rule 18 (stm -> exp SEMI .)


state 42

    (28) exp -> exp STAR . exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp1                           shift and go to state 70
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 43

    (30) exp -> exp SLASH . exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp1                           shift and go to state 71
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 44

    (31) exp -> exp PERCENT . exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp1                           shift and go to state 72
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 45

    (19) stm -> assign SEMI .

    WHILE           reduce using rule 19 (stm -> assign SEMI .)
    IF              reduce using rule 19 (stm -> assign SEMI .)
    FOR             reduce using rule 19 (stm -> assign SEMI .)
    RETURN          reduce using rule 19 (stm -> assign SEMI .)
    ID              reduce using rule 19 (stm -> assign SEMI .)
    LET             reduce using rule 19 (stm -> assign SEMI .)
    FN              reduce using rule 19 (stm -> assign SEMI .)
    NUMBER          reduce using rule 19 (stm -> assign SEMI .)
    RIGHTBRACKET    reduce using rule 19 (stm -> assign SEMI .)
    ELSE            reduce using rule 19 (stm -> assign SEMI .)


state 46

    (20) stm -> WHILE exp . bodyorstm
    (28) exp -> exp . STAR exp1
    (30) exp -> exp . SLASH exp1
    (31) exp -> exp . PERCENT exp1
    (16) bodyorstm -> . stm
    (17) bodyorstm -> . body
    (18) stm -> . exp SEMI
    (19) stm -> . assign SEMI
    (20) stm -> . WHILE exp bodyorstm
    (21) stm -> . IF exp bodyorstm
    (22) stm -> . IF exp bodyorstm ELSE stm
    (23) stm -> . FOR ID IN stm2 body
    (24) stm -> . FOR ID IN ID body
    (25) stm -> . RETURN exp SEMI
    (15) body -> . LEFTBRACKET stms RIGHTBRACKET
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (59) assign -> . ID EQ exp
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    STAR            shift and go to state 42
    SLASH           shift and go to state 43
    PERCENT         shift and go to state 44
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    FOR             shift and go to state 22
    RETURN          shift and go to state 24
    LEFTBRACKET     shift and go to state 10
    ID              shift and go to state 23
    NUMBER          shift and go to state 33

    exp                            shift and go to state 18
    bodyorstm                      shift and go to state 73
    exp1                           shift and go to state 25
    stm                            shift and go to state 74
    body                           shift and go to state 75
    assign                         shift and go to state 19
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 47

    (53) exp8 -> ID .
    (55) call -> ID . LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> ID . LEFTPARENTHESES RIGHTPARENTHESES

    OROR            reduce using rule 53 (exp8 -> ID .)
    ANDAND          reduce using rule 53 (exp8 -> ID .)
    EQEQ            reduce using rule 53 (exp8 -> ID .)
    NE              reduce using rule 53 (exp8 -> ID .)
    LT              reduce using rule 53 (exp8 -> ID .)
    GT              reduce using rule 53 (exp8 -> ID .)
    GE              reduce using rule 53 (exp8 -> ID .)
    LE              reduce using rule 53 (exp8 -> ID .)
    OR              reduce using rule 53 (exp8 -> ID .)
    CARET           reduce using rule 53 (exp8 -> ID .)
    AND             reduce using rule 53 (exp8 -> ID .)
    PLUS            reduce using rule 53 (exp8 -> ID .)
    MINUS           reduce using rule 53 (exp8 -> ID .)
    STAR            reduce using rule 53 (exp8 -> ID .)
    SLASH           reduce using rule 53 (exp8 -> ID .)
    PERCENT         reduce using rule 53 (exp8 -> ID .)
    WHILE           reduce using rule 53 (exp8 -> ID .)
    IF              reduce using rule 53 (exp8 -> ID .)
    FOR             reduce using rule 53 (exp8 -> ID .)
    RETURN          reduce using rule 53 (exp8 -> ID .)
    LEFTBRACKET     reduce using rule 53 (exp8 -> ID .)
    ID              reduce using rule 53 (exp8 -> ID .)
    NUMBER          reduce using rule 53 (exp8 -> ID .)
    SEMI            reduce using rule 53 (exp8 -> ID .)
    COMMA           reduce using rule 53 (exp8 -> ID .)
    RIGHTPARENTHESES reduce using rule 53 (exp8 -> ID .)
    DOTDOT          reduce using rule 53 (exp8 -> ID .)
    LEFTPARENTHESES shift and go to state 50


state 48

    (21) stm -> IF exp . bodyorstm
    (22) stm -> IF exp . bodyorstm ELSE stm
    (28) exp -> exp . STAR exp1
    (30) exp -> exp . SLASH exp1
    (31) exp -> exp . PERCENT exp1
    (16) bodyorstm -> . stm
    (17) bodyorstm -> . body
    (18) stm -> . exp SEMI
    (19) stm -> . assign SEMI
    (20) stm -> . WHILE exp bodyorstm
    (21) stm -> . IF exp bodyorstm
    (22) stm -> . IF exp bodyorstm ELSE stm
    (23) stm -> . FOR ID IN stm2 body
    (24) stm -> . FOR ID IN ID body
    (25) stm -> . RETURN exp SEMI
    (15) body -> . LEFTBRACKET stms RIGHTBRACKET
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (59) assign -> . ID EQ exp
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    STAR            shift and go to state 42
    SLASH           shift and go to state 43
    PERCENT         shift and go to state 44
    WHILE           shift and go to state 20
    IF              shift and go to state 21
    FOR             shift and go to state 22
    RETURN          shift and go to state 24
    LEFTBRACKET     shift and go to state 10
    ID              shift and go to state 23
    NUMBER          shift and go to state 33

    exp                            shift and go to state 18
    bodyorstm                      shift and go to state 76
    stm                            shift and go to state 74
    exp1                           shift and go to state 25
    body                           shift and go to state 75
    assign                         shift and go to state 19
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 49

    (23) stm -> FOR ID . IN stm2 body
    (24) stm -> FOR ID . IN ID body

    IN              shift and go to state 77


state 50

    (55) call -> ID LEFTPARENTHESES . params RIGHTPARENTHESES
    (56) call -> ID LEFTPARENTHESES . RIGHTPARENTHESES
    (57) params -> . exp COMMA params
    (58) params -> . exp
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 79
    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    params                         shift and go to state 78
    exp                            shift and go to state 80
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 51

    (25) stm -> RETURN exp . SEMI
    (28) exp -> exp . STAR exp1
    (30) exp -> exp . SLASH exp1
    (31) exp -> exp . PERCENT exp1

    SEMI            shift and go to state 81
    STAR            shift and go to state 42
    SLASH           shift and go to state 43
    PERCENT         shift and go to state 44


state 52

    (32) exp1 -> exp1 PLUS . exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp2                           shift and go to state 82
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 53

    (34) exp1 -> exp1 MINUS . exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp2                           shift and go to state 83
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 54

    (35) exp2 -> exp2 AND . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp3                           shift and go to state 84
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 55

    (37) exp3 -> exp3 CARET . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp4                           shift and go to state 85
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 56

    (39) exp4 -> exp4 OR . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp5                           shift and go to state 86
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 57

    (41) exp5 -> exp5 EQEQ . exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp6                           shift and go to state 87
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 58

    (43) exp5 -> exp5 NE . exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp6                           shift and go to state 88
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 59

    (44) exp5 -> exp5 LT . exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp6                           shift and go to state 89
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 60

    (45) exp5 -> exp5 GT . exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp6                           shift and go to state 90
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 61

    (46) exp5 -> exp5 GE . exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp6                           shift and go to state 91
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 62

    (47) exp5 -> exp5 LE . exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp6                           shift and go to state 92
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 63

    (48) exp6 -> exp6 ANDAND . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp7                           shift and go to state 93
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 64

    (50) exp7 -> exp7 OROR . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp8                           shift and go to state 94
    call                           shift and go to state 34

state 65

    (6) declvar -> LET MUT assign SEMI .

    LET             reduce using rule 6 (declvar -> LET MUT assign SEMI .)
    FN              reduce using rule 6 (declvar -> LET MUT assign SEMI .)
    $end            reduce using rule 6 (declvar -> LET MUT assign SEMI .)
    RIGHTBRACKET    reduce using rule 6 (declvar -> LET MUT assign SEMI .)


state 66

    (59) assign -> ID EQ exp .
    (28) exp -> exp . STAR exp1
    (30) exp -> exp . SLASH exp1
    (31) exp -> exp . PERCENT exp1

    SEMI            reduce using rule 59 (assign -> ID EQ exp .)
    STAR            shift and go to state 42
    SLASH           shift and go to state 43
    PERCENT         shift and go to state 44


state 67

    (10) sigparams -> ID . COLON tipo
    (11) sigparams -> ID . COLON tipo COMMA sigparams

    COLON           shift and go to state 95


state 68

    (8) signature -> FN ID LEFTPARENTHESES sigparams . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 96


state 69

    (9) signature -> FN ID LEFTPARENTHESES RIGHTPARENTHESES .

    LEFTBRACKET     reduce using rule 9 (signature -> FN ID LEFTPARENTHESES RIGHTPARENTHESES .)


state 70

    (28) exp -> exp STAR exp1 .
    (32) exp1 -> exp1 . PLUS exp2
    (34) exp1 -> exp1 . MINUS exp2

    SEMI            reduce using rule 28 (exp -> exp STAR exp1 .)
    STAR            reduce using rule 28 (exp -> exp STAR exp1 .)
    SLASH           reduce using rule 28 (exp -> exp STAR exp1 .)
    PERCENT         reduce using rule 28 (exp -> exp STAR exp1 .)
    WHILE           reduce using rule 28 (exp -> exp STAR exp1 .)
    IF              reduce using rule 28 (exp -> exp STAR exp1 .)
    FOR             reduce using rule 28 (exp -> exp STAR exp1 .)
    RETURN          reduce using rule 28 (exp -> exp STAR exp1 .)
    LEFTBRACKET     reduce using rule 28 (exp -> exp STAR exp1 .)
    ID              reduce using rule 28 (exp -> exp STAR exp1 .)
    NUMBER          reduce using rule 28 (exp -> exp STAR exp1 .)
    COMMA           reduce using rule 28 (exp -> exp STAR exp1 .)
    RIGHTPARENTHESES reduce using rule 28 (exp -> exp STAR exp1 .)
    DOTDOT          reduce using rule 28 (exp -> exp STAR exp1 .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53


state 71

    (30) exp -> exp SLASH exp1 .
    (32) exp1 -> exp1 . PLUS exp2
    (34) exp1 -> exp1 . MINUS exp2

    SEMI            reduce using rule 30 (exp -> exp SLASH exp1 .)
    STAR            reduce using rule 30 (exp -> exp SLASH exp1 .)
    SLASH           reduce using rule 30 (exp -> exp SLASH exp1 .)
    PERCENT         reduce using rule 30 (exp -> exp SLASH exp1 .)
    WHILE           reduce using rule 30 (exp -> exp SLASH exp1 .)
    IF              reduce using rule 30 (exp -> exp SLASH exp1 .)
    FOR             reduce using rule 30 (exp -> exp SLASH exp1 .)
    RETURN          reduce using rule 30 (exp -> exp SLASH exp1 .)
    LEFTBRACKET     reduce using rule 30 (exp -> exp SLASH exp1 .)
    ID              reduce using rule 30 (exp -> exp SLASH exp1 .)
    NUMBER          reduce using rule 30 (exp -> exp SLASH exp1 .)
    COMMA           reduce using rule 30 (exp -> exp SLASH exp1 .)
    RIGHTPARENTHESES reduce using rule 30 (exp -> exp SLASH exp1 .)
    DOTDOT          reduce using rule 30 (exp -> exp SLASH exp1 .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53


state 72

    (31) exp -> exp PERCENT exp1 .
    (32) exp1 -> exp1 . PLUS exp2
    (34) exp1 -> exp1 . MINUS exp2

    SEMI            reduce using rule 31 (exp -> exp PERCENT exp1 .)
    STAR            reduce using rule 31 (exp -> exp PERCENT exp1 .)
    SLASH           reduce using rule 31 (exp -> exp PERCENT exp1 .)
    PERCENT         reduce using rule 31 (exp -> exp PERCENT exp1 .)
    WHILE           reduce using rule 31 (exp -> exp PERCENT exp1 .)
    IF              reduce using rule 31 (exp -> exp PERCENT exp1 .)
    FOR             reduce using rule 31 (exp -> exp PERCENT exp1 .)
    RETURN          reduce using rule 31 (exp -> exp PERCENT exp1 .)
    LEFTBRACKET     reduce using rule 31 (exp -> exp PERCENT exp1 .)
    ID              reduce using rule 31 (exp -> exp PERCENT exp1 .)
    NUMBER          reduce using rule 31 (exp -> exp PERCENT exp1 .)
    COMMA           reduce using rule 31 (exp -> exp PERCENT exp1 .)
    RIGHTPARENTHESES reduce using rule 31 (exp -> exp PERCENT exp1 .)
    DOTDOT          reduce using rule 31 (exp -> exp PERCENT exp1 .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53


state 73

    (20) stm -> WHILE exp bodyorstm .

    WHILE           reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    IF              reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    FOR             reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    RETURN          reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    ID              reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    LET             reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    FN              reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    NUMBER          reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    RIGHTBRACKET    reduce using rule 20 (stm -> WHILE exp bodyorstm .)
    ELSE            reduce using rule 20 (stm -> WHILE exp bodyorstm .)


state 74

    (16) bodyorstm -> stm .

    WHILE           reduce using rule 16 (bodyorstm -> stm .)
    IF              reduce using rule 16 (bodyorstm -> stm .)
    FOR             reduce using rule 16 (bodyorstm -> stm .)
    RETURN          reduce using rule 16 (bodyorstm -> stm .)
    ID              reduce using rule 16 (bodyorstm -> stm .)
    LET             reduce using rule 16 (bodyorstm -> stm .)
    FN              reduce using rule 16 (bodyorstm -> stm .)
    NUMBER          reduce using rule 16 (bodyorstm -> stm .)
    RIGHTBRACKET    reduce using rule 16 (bodyorstm -> stm .)
    ELSE            reduce using rule 16 (bodyorstm -> stm .)


state 75

    (17) bodyorstm -> body .

    WHILE           reduce using rule 17 (bodyorstm -> body .)
    IF              reduce using rule 17 (bodyorstm -> body .)
    FOR             reduce using rule 17 (bodyorstm -> body .)
    RETURN          reduce using rule 17 (bodyorstm -> body .)
    ID              reduce using rule 17 (bodyorstm -> body .)
    LET             reduce using rule 17 (bodyorstm -> body .)
    FN              reduce using rule 17 (bodyorstm -> body .)
    NUMBER          reduce using rule 17 (bodyorstm -> body .)
    RIGHTBRACKET    reduce using rule 17 (bodyorstm -> body .)
    ELSE            reduce using rule 17 (bodyorstm -> body .)


state 76

    (21) stm -> IF exp bodyorstm .
    (22) stm -> IF exp bodyorstm . ELSE stm

  ! shift/reduce conflict for ELSE resolved as shift
    WHILE           reduce using rule 21 (stm -> IF exp bodyorstm .)
    IF              reduce using rule 21 (stm -> IF exp bodyorstm .)
    FOR             reduce using rule 21 (stm -> IF exp bodyorstm .)
    RETURN          reduce using rule 21 (stm -> IF exp bodyorstm .)
    ID              reduce using rule 21 (stm -> IF exp bodyorstm .)
    LET             reduce using rule 21 (stm -> IF exp bodyorstm .)
    FN              reduce using rule 21 (stm -> IF exp bodyorstm .)
    NUMBER          reduce using rule 21 (stm -> IF exp bodyorstm .)
    RIGHTBRACKET    reduce using rule 21 (stm -> IF exp bodyorstm .)
    ELSE            shift and go to state 97

  ! ELSE            [ reduce using rule 21 (stm -> IF exp bodyorstm .) ]


state 77

    (23) stm -> FOR ID IN . stm2 body
    (24) stm -> FOR ID IN . ID body
    (26) stm2 -> . LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES
    (27) stm2 -> . LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES

    ID              shift and go to state 98
    LEFTPARENTHESES shift and go to state 100

    stm2                           shift and go to state 99

state 78

    (55) call -> ID LEFTPARENTHESES params . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 101


state 79

    (56) call -> ID LEFTPARENTHESES RIGHTPARENTHESES .

    OROR            reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    ANDAND          reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    EQEQ            reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    NE              reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    LT              reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    GT              reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    GE              reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    LE              reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    OR              reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    CARET           reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    AND             reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    PLUS            reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    MINUS           reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    SEMI            reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    STAR            reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    SLASH           reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    PERCENT         reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    WHILE           reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    IF              reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    FOR             reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    RETURN          reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    LEFTBRACKET     reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    ID              reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    NUMBER          reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    COMMA           reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    RIGHTPARENTHESES reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)
    DOTDOT          reduce using rule 56 (call -> ID LEFTPARENTHESES RIGHTPARENTHESES .)


state 80

    (57) params -> exp . COMMA params
    (58) params -> exp .
    (28) exp -> exp . STAR exp1
    (30) exp -> exp . SLASH exp1
    (31) exp -> exp . PERCENT exp1

    COMMA           shift and go to state 102
    RIGHTPARENTHESES reduce using rule 58 (params -> exp .)
    STAR            shift and go to state 42
    SLASH           shift and go to state 43
    PERCENT         shift and go to state 44


state 81

    (25) stm -> RETURN exp SEMI .

    WHILE           reduce using rule 25 (stm -> RETURN exp SEMI .)
    IF              reduce using rule 25 (stm -> RETURN exp SEMI .)
    FOR             reduce using rule 25 (stm -> RETURN exp SEMI .)
    RETURN          reduce using rule 25 (stm -> RETURN exp SEMI .)
    ID              reduce using rule 25 (stm -> RETURN exp SEMI .)
    LET             reduce using rule 25 (stm -> RETURN exp SEMI .)
    FN              reduce using rule 25 (stm -> RETURN exp SEMI .)
    NUMBER          reduce using rule 25 (stm -> RETURN exp SEMI .)
    RIGHTBRACKET    reduce using rule 25 (stm -> RETURN exp SEMI .)
    ELSE            reduce using rule 25 (stm -> RETURN exp SEMI .)


state 82

    (32) exp1 -> exp1 PLUS exp2 .
    (35) exp2 -> exp2 . AND exp3

    PLUS            reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    MINUS           reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    SEMI            reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    STAR            reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    SLASH           reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    PERCENT         reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    WHILE           reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    IF              reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    FOR             reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    RETURN          reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    LEFTBRACKET     reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    ID              reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    NUMBER          reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    COMMA           reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    RIGHTPARENTHESES reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    DOTDOT          reduce using rule 32 (exp1 -> exp1 PLUS exp2 .)
    AND             shift and go to state 54


state 83

    (34) exp1 -> exp1 MINUS exp2 .
    (35) exp2 -> exp2 . AND exp3

    PLUS            reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    MINUS           reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    SEMI            reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    STAR            reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    SLASH           reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    PERCENT         reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    WHILE           reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    IF              reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    FOR             reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    RETURN          reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    LEFTBRACKET     reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    ID              reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    NUMBER          reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    COMMA           reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    RIGHTPARENTHESES reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    DOTDOT          reduce using rule 34 (exp1 -> exp1 MINUS exp2 .)
    AND             shift and go to state 54


state 84

    (35) exp2 -> exp2 AND exp3 .
    (37) exp3 -> exp3 . CARET exp4

    AND             reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    PLUS            reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    MINUS           reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    SEMI            reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    STAR            reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    SLASH           reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    PERCENT         reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    WHILE           reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    IF              reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    FOR             reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    RETURN          reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    LEFTBRACKET     reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    ID              reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    NUMBER          reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    COMMA           reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    RIGHTPARENTHESES reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    DOTDOT          reduce using rule 35 (exp2 -> exp2 AND exp3 .)
    CARET           shift and go to state 55


state 85

    (37) exp3 -> exp3 CARET exp4 .
    (39) exp4 -> exp4 . OR exp5

    CARET           reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    AND             reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    PLUS            reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    MINUS           reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    SEMI            reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    STAR            reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    SLASH           reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    PERCENT         reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    WHILE           reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    IF              reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    FOR             reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    RETURN          reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    LEFTBRACKET     reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    ID              reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    NUMBER          reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    COMMA           reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    RIGHTPARENTHESES reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    DOTDOT          reduce using rule 37 (exp3 -> exp3 CARET exp4 .)
    OR              shift and go to state 56


state 86

    (39) exp4 -> exp4 OR exp5 .
    (41) exp5 -> exp5 . EQEQ exp6
    (43) exp5 -> exp5 . NE exp6
    (44) exp5 -> exp5 . LT exp6
    (45) exp5 -> exp5 . GT exp6
    (46) exp5 -> exp5 . GE exp6
    (47) exp5 -> exp5 . LE exp6

    OR              reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    CARET           reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    AND             reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    PLUS            reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    MINUS           reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    SEMI            reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    STAR            reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    SLASH           reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    PERCENT         reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    WHILE           reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    IF              reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    FOR             reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    RETURN          reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    LEFTBRACKET     reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    ID              reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    NUMBER          reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    COMMA           reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    RIGHTPARENTHESES reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    DOTDOT          reduce using rule 39 (exp4 -> exp4 OR exp5 .)
    EQEQ            shift and go to state 57
    NE              shift and go to state 58
    LT              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LE              shift and go to state 62


state 87

    (41) exp5 -> exp5 EQEQ exp6 .
    (48) exp6 -> exp6 . ANDAND exp7

    EQEQ            reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    NE              reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    LT              reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    GT              reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    GE              reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    LE              reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    OR              reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    CARET           reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    AND             reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    PLUS            reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    MINUS           reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    SEMI            reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    STAR            reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    SLASH           reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    PERCENT         reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    WHILE           reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    IF              reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    FOR             reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    RETURN          reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    LEFTBRACKET     reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    ID              reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    NUMBER          reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    COMMA           reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    RIGHTPARENTHESES reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    DOTDOT          reduce using rule 41 (exp5 -> exp5 EQEQ exp6 .)
    ANDAND          shift and go to state 63


state 88

    (43) exp5 -> exp5 NE exp6 .
    (48) exp6 -> exp6 . ANDAND exp7

    EQEQ            reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    NE              reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    LT              reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    GT              reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    GE              reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    LE              reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    OR              reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    CARET           reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    AND             reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    PLUS            reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    MINUS           reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    SEMI            reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    STAR            reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    SLASH           reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    PERCENT         reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    WHILE           reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    IF              reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    FOR             reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    RETURN          reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    LEFTBRACKET     reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    ID              reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    NUMBER          reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    COMMA           reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    RIGHTPARENTHESES reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    DOTDOT          reduce using rule 43 (exp5 -> exp5 NE exp6 .)
    ANDAND          shift and go to state 63


state 89

    (44) exp5 -> exp5 LT exp6 .
    (48) exp6 -> exp6 . ANDAND exp7

    EQEQ            reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    NE              reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    LT              reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    GT              reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    GE              reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    LE              reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    OR              reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    CARET           reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    AND             reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    PLUS            reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    MINUS           reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    SEMI            reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    STAR            reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    SLASH           reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    PERCENT         reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    WHILE           reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    IF              reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    FOR             reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    RETURN          reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    LEFTBRACKET     reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    ID              reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    NUMBER          reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    COMMA           reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    RIGHTPARENTHESES reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    DOTDOT          reduce using rule 44 (exp5 -> exp5 LT exp6 .)
    ANDAND          shift and go to state 63


state 90

    (45) exp5 -> exp5 GT exp6 .
    (48) exp6 -> exp6 . ANDAND exp7

    EQEQ            reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    NE              reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    LT              reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    GT              reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    GE              reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    LE              reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    OR              reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    CARET           reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    AND             reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    PLUS            reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    MINUS           reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    SEMI            reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    STAR            reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    SLASH           reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    PERCENT         reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    WHILE           reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    IF              reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    FOR             reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    RETURN          reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    LEFTBRACKET     reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    ID              reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    NUMBER          reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    COMMA           reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    RIGHTPARENTHESES reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    DOTDOT          reduce using rule 45 (exp5 -> exp5 GT exp6 .)
    ANDAND          shift and go to state 63


state 91

    (46) exp5 -> exp5 GE exp6 .
    (48) exp6 -> exp6 . ANDAND exp7

    EQEQ            reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    NE              reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    LT              reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    GT              reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    GE              reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    LE              reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    OR              reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    CARET           reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    AND             reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    PLUS            reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    MINUS           reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    SEMI            reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    STAR            reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    SLASH           reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    PERCENT         reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    WHILE           reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    IF              reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    FOR             reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    RETURN          reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    LEFTBRACKET     reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    ID              reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    NUMBER          reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    COMMA           reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    RIGHTPARENTHESES reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    DOTDOT          reduce using rule 46 (exp5 -> exp5 GE exp6 .)
    ANDAND          shift and go to state 63


state 92

    (47) exp5 -> exp5 LE exp6 .
    (48) exp6 -> exp6 . ANDAND exp7

    EQEQ            reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    NE              reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    LT              reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    GT              reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    GE              reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    LE              reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    OR              reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    CARET           reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    AND             reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    PLUS            reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    MINUS           reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    SEMI            reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    STAR            reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    SLASH           reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    PERCENT         reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    WHILE           reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    IF              reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    FOR             reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    RETURN          reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    LEFTBRACKET     reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    ID              reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    NUMBER          reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    COMMA           reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    RIGHTPARENTHESES reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    DOTDOT          reduce using rule 47 (exp5 -> exp5 LE exp6 .)
    ANDAND          shift and go to state 63


state 93

    (48) exp6 -> exp6 ANDAND exp7 .
    (50) exp7 -> exp7 . OROR exp8

    ANDAND          reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    EQEQ            reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    NE              reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    LT              reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    GT              reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    GE              reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    LE              reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    OR              reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    CARET           reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    AND             reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    PLUS            reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    MINUS           reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    SEMI            reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    STAR            reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    SLASH           reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    PERCENT         reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    WHILE           reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    IF              reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    FOR             reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    RETURN          reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    LEFTBRACKET     reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    ID              reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    NUMBER          reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    COMMA           reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    RIGHTPARENTHESES reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    DOTDOT          reduce using rule 48 (exp6 -> exp6 ANDAND exp7 .)
    OROR            shift and go to state 64


state 94

    (50) exp7 -> exp7 OROR exp8 .

    OROR            reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    ANDAND          reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    EQEQ            reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    NE              reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    LT              reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    GT              reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    GE              reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    LE              reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    OR              reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    CARET           reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    AND             reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    PLUS            reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    MINUS           reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    SEMI            reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    STAR            reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    SLASH           reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    PERCENT         reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    WHILE           reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    IF              reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    FOR             reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    RETURN          reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    LEFTBRACKET     reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    ID              reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    NUMBER          reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    COMMA           reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    RIGHTPARENTHESES reduce using rule 50 (exp7 -> exp7 OROR exp8 .)
    DOTDOT          reduce using rule 50 (exp7 -> exp7 OROR exp8 .)


state 95

    (10) sigparams -> ID COLON . tipo
    (11) sigparams -> ID COLON . tipo COMMA sigparams
    (60) tipo -> . ITT
    (61) tipo -> . UTT
    (62) tipo -> . FTT
    (63) tipo -> . STRING
    (64) tipo -> . CHAR

    ITT             shift and go to state 104
    UTT             shift and go to state 105
    FTT             shift and go to state 106
    STRING          shift and go to state 107
    CHAR            shift and go to state 108

    tipo                           shift and go to state 103

state 96

    (8) signature -> FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES .

    LEFTBRACKET     reduce using rule 8 (signature -> FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES .)


state 97

    (22) stm -> IF exp bodyorstm ELSE . stm
    (18) stm -> . exp SEMI
    (19) stm -> . assign SEMI
    (20) stm -> . WHILE exp bodyorstm
    (21) stm -> . IF exp bodyorstm
    (22) stm -> . IF exp bodyorstm ELSE stm
    (23) stm -> . FOR ID IN stm2 body
    (24) stm -> . FOR ID IN ID body
    (25) stm -> . RETURN exp SEMI
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (59) assign -> . ID EQ exp
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    WHILE           shift and go to state 20
    IF              shift and go to state 21
    FOR             shift and go to state 22
    RETURN          shift and go to state 24
    ID              shift and go to state 23
    NUMBER          shift and go to state 33

    exp                            shift and go to state 18
    stm                            shift and go to state 109
    assign                         shift and go to state 19
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 98

    (24) stm -> FOR ID IN ID . body
    (15) body -> . LEFTBRACKET stms RIGHTBRACKET

    LEFTBRACKET     shift and go to state 10

    body                           shift and go to state 110

state 99

    (23) stm -> FOR ID IN stm2 . body
    (15) body -> . LEFTBRACKET stms RIGHTBRACKET

    LEFTBRACKET     shift and go to state 10

    body                           shift and go to state 111

state 100

    (26) stm2 -> LEFTPARENTHESES . exp DOTDOT exp RIGHTPARENTHESES
    (27) stm2 -> LEFTPARENTHESES . exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp                            shift and go to state 112
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 101

    (55) call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .

    OROR            reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    ANDAND          reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    EQEQ            reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    NE              reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    LT              reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    GT              reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    GE              reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    LE              reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    OR              reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    CARET           reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    AND             reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    PLUS            reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    MINUS           reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    SEMI            reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    STAR            reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    SLASH           reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    PERCENT         reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    WHILE           reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    IF              reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    FOR             reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    RETURN          reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    LEFTBRACKET     reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    ID              reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    NUMBER          reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    COMMA           reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    RIGHTPARENTHESES reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)
    DOTDOT          reduce using rule 55 (call -> ID LEFTPARENTHESES params RIGHTPARENTHESES .)


state 102

    (57) params -> exp COMMA . params
    (57) params -> . exp COMMA params
    (58) params -> . exp
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp                            shift and go to state 80
    params                         shift and go to state 113
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 103

    (10) sigparams -> ID COLON tipo .
    (11) sigparams -> ID COLON tipo . COMMA sigparams

    RIGHTPARENTHESES reduce using rule 10 (sigparams -> ID COLON tipo .)
    COMMA           shift and go to state 114


state 104

    (60) tipo -> ITT .

    COMMA           reduce using rule 60 (tipo -> ITT .)
    RIGHTPARENTHESES reduce using rule 60 (tipo -> ITT .)


state 105

    (61) tipo -> UTT .

    COMMA           reduce using rule 61 (tipo -> UTT .)
    RIGHTPARENTHESES reduce using rule 61 (tipo -> UTT .)


state 106

    (62) tipo -> FTT .

    COMMA           reduce using rule 62 (tipo -> FTT .)
    RIGHTPARENTHESES reduce using rule 62 (tipo -> FTT .)


state 107

    (63) tipo -> STRING .

    COMMA           reduce using rule 63 (tipo -> STRING .)
    RIGHTPARENTHESES reduce using rule 63 (tipo -> STRING .)


state 108

    (64) tipo -> CHAR .

    COMMA           reduce using rule 64 (tipo -> CHAR .)
    RIGHTPARENTHESES reduce using rule 64 (tipo -> CHAR .)


state 109

    (22) stm -> IF exp bodyorstm ELSE stm .

    WHILE           reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    IF              reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    FOR             reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    RETURN          reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    ID              reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    LET             reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    FN              reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    NUMBER          reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    RIGHTBRACKET    reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)
    ELSE            reduce using rule 22 (stm -> IF exp bodyorstm ELSE stm .)


state 110

    (24) stm -> FOR ID IN ID body .

    WHILE           reduce using rule 24 (stm -> FOR ID IN ID body .)
    IF              reduce using rule 24 (stm -> FOR ID IN ID body .)
    FOR             reduce using rule 24 (stm -> FOR ID IN ID body .)
    RETURN          reduce using rule 24 (stm -> FOR ID IN ID body .)
    ID              reduce using rule 24 (stm -> FOR ID IN ID body .)
    LET             reduce using rule 24 (stm -> FOR ID IN ID body .)
    FN              reduce using rule 24 (stm -> FOR ID IN ID body .)
    NUMBER          reduce using rule 24 (stm -> FOR ID IN ID body .)
    RIGHTBRACKET    reduce using rule 24 (stm -> FOR ID IN ID body .)
    ELSE            reduce using rule 24 (stm -> FOR ID IN ID body .)


state 111

    (23) stm -> FOR ID IN stm2 body .

    WHILE           reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    IF              reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    FOR             reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    RETURN          reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    ID              reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    LET             reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    FN              reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    NUMBER          reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    RIGHTBRACKET    reduce using rule 23 (stm -> FOR ID IN stm2 body .)
    ELSE            reduce using rule 23 (stm -> FOR ID IN stm2 body .)


state 112

    (26) stm2 -> LEFTPARENTHESES exp . DOTDOT exp RIGHTPARENTHESES
    (27) stm2 -> LEFTPARENTHESES exp . DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES
    (28) exp -> exp . STAR exp1
    (30) exp -> exp . SLASH exp1
    (31) exp -> exp . PERCENT exp1

    DOTDOT          shift and go to state 115
    STAR            shift and go to state 42
    SLASH           shift and go to state 43
    PERCENT         shift and go to state 44


state 113

    (57) params -> exp COMMA params .

    RIGHTPARENTHESES reduce using rule 57 (params -> exp COMMA params .)


state 114

    (11) sigparams -> ID COLON tipo COMMA . sigparams
    (10) sigparams -> . ID COLON tipo
    (11) sigparams -> . ID COLON tipo COMMA sigparams

    ID              shift and go to state 67

    sigparams                      shift and go to state 116

state 115

    (26) stm2 -> LEFTPARENTHESES exp DOTDOT . exp RIGHTPARENTHESES
    (27) stm2 -> LEFTPARENTHESES exp DOTDOT . exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES
    (28) exp -> . exp STAR exp1
    (29) exp -> . exp1
    (30) exp -> . exp SLASH exp1
    (31) exp -> . exp PERCENT exp1
    (32) exp1 -> . exp1 PLUS exp2
    (33) exp1 -> . exp2
    (34) exp1 -> . exp1 MINUS exp2
    (35) exp2 -> . exp2 AND exp3
    (36) exp2 -> . exp3
    (37) exp3 -> . exp3 CARET exp4
    (38) exp3 -> . exp4
    (39) exp4 -> . exp4 OR exp5
    (40) exp4 -> . exp5
    (41) exp5 -> . exp5 EQEQ exp6
    (42) exp5 -> . exp6
    (43) exp5 -> . exp5 NE exp6
    (44) exp5 -> . exp5 LT exp6
    (45) exp5 -> . exp5 GT exp6
    (46) exp5 -> . exp5 GE exp6
    (47) exp5 -> . exp5 LE exp6
    (48) exp6 -> . exp6 ANDAND exp7
    (49) exp6 -> . exp7
    (50) exp7 -> . exp7 OROR exp8
    (51) exp7 -> . exp8
    (52) exp8 -> . NUMBER
    (53) exp8 -> . ID
    (54) exp8 -> . call
    (55) call -> . ID LEFTPARENTHESES params RIGHTPARENTHESES
    (56) call -> . ID LEFTPARENTHESES RIGHTPARENTHESES

    NUMBER          shift and go to state 33
    ID              shift and go to state 47

    exp                            shift and go to state 117
    exp1                           shift and go to state 25
    exp2                           shift and go to state 26
    exp3                           shift and go to state 27
    exp4                           shift and go to state 28
    exp5                           shift and go to state 29
    exp6                           shift and go to state 30
    exp7                           shift and go to state 31
    exp8                           shift and go to state 32
    call                           shift and go to state 34

state 116

    (11) sigparams -> ID COLON tipo COMMA sigparams .

    RIGHTPARENTHESES reduce using rule 11 (sigparams -> ID COLON tipo COMMA sigparams .)


state 117

    (26) stm2 -> LEFTPARENTHESES exp DOTDOT exp . RIGHTPARENTHESES
    (27) stm2 -> LEFTPARENTHESES exp DOTDOT exp . RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES
    (28) exp -> exp . STAR exp1
    (30) exp -> exp . SLASH exp1
    (31) exp -> exp . PERCENT exp1

    RIGHTPARENTHESES shift and go to state 118
    STAR            shift and go to state 42
    SLASH           shift and go to state 43
    PERCENT         shift and go to state 44


state 118

    (26) stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES .
    (27) stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES . DOT ID LEFTPARENTHESES RIGHTPARENTHESES

    LEFTBRACKET     reduce using rule 26 (stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES .)
    DOT             shift and go to state 119


state 119

    (27) stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT . ID LEFTPARENTHESES RIGHTPARENTHESES

    ID              shift and go to state 120


state 120

    (27) stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID . LEFTPARENTHESES RIGHTPARENTHESES

    LEFTPARENTHESES shift and go to state 121


state 121

    (27) stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES . RIGHTPARENTHESES

    RIGHTPARENTHESES shift and go to state 122


state 122

    (27) stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES .

    LEFTBRACKET     reduce using rule 27 (stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 76 resolved as shift
