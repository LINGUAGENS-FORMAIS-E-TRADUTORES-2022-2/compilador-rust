
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSEQMINUSEQSTAREQSLASHEQPERCENTEQCARETEQANDEQOREQSHLEQSHREQEQEQEQNEGTLTGELEleftPLUSMINUSSHLSHRleftNOTANDORANDANDORORleftSTARSLASHPERCENTleftCARETAND ANDAND ANDEQ AS ASYNC AT AWAIT BREAK CARET CARETEQ CHAR COLON COMMA CONST CONTINUE CRATE DEDENT DOLLAR DOT DOTDOT DOTDOTDOT DOTDOTEQ DYN ELSE ENUM EQ EQEQ EXTERN FALSE FATARROW FN FOR FTT GE GT ID IDENT IF IMPL IN IS ISEXCLAMATION ITT LE LEFTBRACKET LEFTPARENTHESES LET LOOP LT MATCH MINUS MINUSEQ MOD MOVE MUT NE NOT NUMBER OR OREQ OROR PATHSEP PERCENT PERCENTEQ PLUS PLUSEQ POUND PUB QUESTION QUESTIONQUESTION RARROW REF RETURN RIGHTBRACKET RIGHTPARENTHESES SELFLOWERCASE SELFUPERCASE SEMI SHL SHLEQ SHR SHREQ SLASH SLASHEQ STAR STAREQ STATIC STRING STRUCT SUPER TILDE TRAIT TRUE TYPE UNDERSCORE UNION UNSAFE USE UTT WHERE WHILEprogram : funcdecl\n                | funcdecl program\n                | declvar \n                | declvar program\n    declvar : LET assign SEMI \n                | LET MUT assign SEMI\n    funcdecl : signature body\n    signature : FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES\n                | FN ID LEFTPARENTHESES RIGHTPARENTHESES\n    sigparams : ID COLON tipo\n                | ID COLON tipo COMMA sigparams\n    stms : stm  \n            | stm  stms\n    body : LEFTBRACKET stms RIGHTBRACKET\n    bodyorstm : stm \n                | body\n    stm : exp SEMI \n            | WHILE exp bodyorstm\n            | IF exp bodyorstm \n            | IF exp bodyorstm ELSE stm \n            | FOR ID IN stm2 body \n            | FOR ID IN ID body \n            | RETURN exp SEMI\n    stm2 : LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES\n            | LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES\n    exp : exp PLUS exp\n            | exp MINUS exp\n            | exp STAR exp\n            | exp CARET exp\n            | exp SLASH exp\n            | exp PERCENT exp\n            | exp AND exp\n            | exp OR exp\n            | exp GE exp\n            | exp GT exp\n            | exp LE exp\n            | exp LT exp\n            | exp AS exp\n            | exp IS exp\n            | exp ISEXCLAMATION exp\n            | exp EQEQ exp\n            | exp NE exp\n            | exp ANDAND exp\n            | exp OROR exp\n            | exp QUESTIONQUESTION exp\n            | exp QUESTION exp COLON exp\n            | exp EQ exp\n            | exp STAREQ exp\n            | exp SLASHEQ exp\n            | exp PLUSEQ exp\n            | exp MINUSEQ exp\n            | exp ANDEQ exp\n            | exp CARETEQ exp\n            | call\n            | assign\n            | NUMBER\n            | ID\n    call : ID LEFTPARENTHESES params RIGHTPARENTHESES\n            | ID LEFTPARENTHESES RIGHTPARENTHESES\n    params : exp COMMA params \n                | exp\n    assign : ID EQ exp\n    tipo : ITT\n            | UTT\n            | FTT\n            | STRING\n            | CHAR\n    '
    
_lr_action_items = {'LET':([0,2,3,9,26,30,66,],[5,5,5,-7,-5,-14,-6,]),'FN':([0,2,3,9,26,30,66,],[6,6,6,-7,-5,-14,-6,]),'$end':([1,2,3,7,8,9,26,30,66,],[0,-1,-3,-2,-4,-7,-5,-14,-6,]),'LEFTBRACKET':([4,21,23,24,25,61,62,67,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,105,109,112,113,115,123,133,137,],[10,-57,-54,-55,-56,10,10,-62,-9,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-59,-8,10,10,-58,-46,-24,-25,]),'MUT':([5,],[12,]),'ID':([5,6,10,12,16,18,19,20,21,22,23,24,25,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,103,105,107,110,111,114,115,116,123,124,125,126,129,130,134,],[13,14,21,13,21,21,21,63,-57,21,-54,-55,-56,21,68,-14,-17,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-18,-15,-16,-19,112,-59,-23,21,21,21,-58,21,-46,-20,-22,-21,68,21,135,]),'WHILE':([10,16,21,23,24,25,30,32,61,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,105,107,111,115,123,124,125,126,],[18,18,-57,-54,-55,-56,-14,-17,18,18,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-18,-15,-16,-19,-59,-23,18,-58,-46,-20,-22,-21,]),'IF':([10,16,21,23,24,25,30,32,61,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,105,107,111,115,123,124,125,126,],[19,19,-57,-54,-55,-56,-14,-17,19,19,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-18,-15,-16,-19,-59,-23,19,-58,-46,-20,-22,-21,]),'FOR':([10,16,21,23,24,25,30,32,61,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,105,107,111,115,123,124,125,126,],[20,20,-57,-54,-55,-56,-14,-17,20,20,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-18,-15,-16,-19,-59,-23,20,-58,-46,-20,-22,-21,]),'RETURN':([10,16,21,23,24,25,30,32,61,62,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,105,107,111,115,123,124,125,126,],[22,22,-57,-54,-55,-56,-14,-17,22,22,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-18,-15,-16,-19,-59,-23,22,-58,-46,-20,-22,-21,]),'NUMBER':([10,16,18,19,21,22,23,24,25,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,99,100,101,102,105,107,110,111,114,115,116,123,124,125,126,130,],[25,25,25,25,-57,25,-54,-55,-56,25,-14,-17,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-18,-15,-16,-19,-59,-23,25,25,25,-58,25,-46,-20,-22,-21,25,]),'SEMI':([11,17,21,23,24,25,27,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,105,115,123,],[26,32,-57,-54,-55,-56,66,107,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-59,-58,-46,]),'EQ':([13,17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[28,54,28,-54,-55,-56,54,54,54,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,54,54,54,-41,-42,-43,-44,54,54,-47,-48,-49,-50,-51,-52,-53,-59,54,-58,54,54,54,]),'LEFTPARENTHESES':([14,21,103,135,],[29,64,114,136,]),'RIGHTBRACKET':([15,16,30,31,32,99,100,101,102,107,124,125,126,],[30,-12,-14,-13,-17,-18,-15,-16,-19,-23,-20,-22,-21,]),'PLUS':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[33,-57,-54,-55,-56,33,33,33,33,-26,-27,-28,-29,-30,-31,-32,-33,33,33,33,33,33,33,33,33,33,-43,-44,33,33,33,33,33,33,33,33,33,-59,33,-58,33,33,33,]),'MINUS':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[34,-57,-54,-55,-56,34,34,34,34,-26,-27,-28,-29,-30,-31,-32,-33,34,34,34,34,34,34,34,34,34,-43,-44,34,34,34,34,34,34,34,34,34,-59,34,-58,34,34,34,]),'STAR':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[35,-57,-54,-55,-56,35,35,35,35,35,35,-28,-29,-30,-31,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-59,35,-58,35,35,35,]),'CARET':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[36,-57,-54,-55,-56,36,36,36,36,36,36,36,-29,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-59,36,-58,36,36,36,]),'SLASH':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[37,-57,-54,-55,-56,37,37,37,37,37,37,-28,-29,-30,-31,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-59,37,-58,37,37,37,]),'PERCENT':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[38,-57,-54,-55,-56,38,38,38,38,38,38,-28,-29,-30,-31,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-59,38,-58,38,38,38,]),'AND':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[39,-57,-54,-55,-56,39,39,39,39,39,39,-28,-29,-30,-31,-32,-33,39,39,39,39,39,39,39,39,39,-43,-44,39,39,39,39,39,39,39,39,39,-59,39,-58,39,39,39,]),'OR':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[40,-57,-54,-55,-56,40,40,40,40,40,40,-28,-29,-30,-31,-32,-33,40,40,40,40,40,40,40,40,40,-43,-44,40,40,40,40,40,40,40,40,40,-59,40,-58,40,40,40,]),'GE':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[41,-57,-54,-55,-56,41,41,41,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,41,41,41,-41,-42,-43,-44,41,41,-47,-48,-49,-50,-51,-52,-53,-59,41,-58,41,41,41,]),'GT':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[42,-57,-54,-55,-56,42,42,42,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,42,42,42,-41,-42,-43,-44,42,42,-47,-48,-49,-50,-51,-52,-53,-59,42,-58,42,42,42,]),'LE':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[43,-57,-54,-55,-56,43,43,43,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,43,43,43,-41,-42,-43,-44,43,43,-47,-48,-49,-50,-51,-52,-53,-59,43,-58,43,43,43,]),'LT':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[44,-57,-54,-55,-56,44,44,44,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,44,44,44,-41,-42,-43,-44,44,44,-47,-48,-49,-50,-51,-52,-53,-59,44,-58,44,44,44,]),'AS':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[45,-57,-54,-55,-56,45,45,45,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,45,45,45,-41,-42,-43,-44,45,45,-47,-48,-49,-50,-51,-52,-53,-59,45,-58,45,45,45,]),'IS':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[46,-57,-54,-55,-56,46,46,46,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,46,46,46,-41,-42,-43,-44,46,46,-47,-48,-49,-50,-51,-52,-53,-59,46,-58,46,46,46,]),'ISEXCLAMATION':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[47,-57,-54,-55,-56,47,47,47,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,47,47,47,-41,-42,-43,-44,47,47,-47,-48,-49,-50,-51,-52,-53,-59,47,-58,47,47,47,]),'EQEQ':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[48,-57,-54,-55,-56,48,48,48,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,48,48,48,-41,-42,-43,-44,48,48,-47,-48,-49,-50,-51,-52,-53,-59,48,-58,48,48,48,]),'NE':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[49,-57,-54,-55,-56,49,49,49,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,49,49,49,-41,-42,-43,-44,49,49,-47,-48,-49,-50,-51,-52,-53,-59,49,-58,49,49,49,]),'ANDAND':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[50,-57,-54,-55,-56,50,50,50,50,50,50,-28,-29,-30,-31,-32,-33,50,50,50,50,50,50,50,50,50,-43,-44,50,50,50,50,50,50,50,50,50,-59,50,-58,50,50,50,]),'OROR':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[51,-57,-54,-55,-56,51,51,51,51,51,51,-28,-29,-30,-31,-32,-33,51,51,51,51,51,51,51,51,51,-43,-44,51,51,51,51,51,51,51,51,51,-59,51,-58,51,51,51,]),'QUESTIONQUESTION':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[52,-57,-54,-55,-56,52,52,52,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,52,52,52,-41,-42,-43,-44,52,52,-47,-48,-49,-50,-51,-52,-53,-59,52,-58,52,52,52,]),'QUESTION':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[53,-57,-54,-55,-56,53,53,53,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,53,53,53,-41,-42,-43,-44,53,53,-47,-48,-49,-50,-51,-52,-53,-59,53,-58,53,53,53,]),'STAREQ':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[55,-57,-54,-55,-56,55,55,55,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,55,55,55,-41,-42,-43,-44,55,55,-47,-48,-49,-50,-51,-52,-53,-59,55,-58,55,55,55,]),'SLASHEQ':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[56,-57,-54,-55,-56,56,56,56,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,56,56,56,-41,-42,-43,-44,56,56,-47,-48,-49,-50,-51,-52,-53,-59,56,-58,56,56,56,]),'PLUSEQ':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[57,-57,-54,-55,-56,57,57,57,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,57,57,57,-41,-42,-43,-44,57,57,-47,-48,-49,-50,-51,-52,-53,-59,57,-58,57,57,57,]),'MINUSEQ':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[58,-57,-54,-55,-56,58,58,58,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,58,58,58,-41,-42,-43,-44,58,58,-47,-48,-49,-50,-51,-52,-53,-59,58,-58,58,58,58,]),'ANDEQ':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[59,-57,-54,-55,-56,59,59,59,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,59,59,59,-41,-42,-43,-44,59,59,-47,-48,-49,-50,-51,-52,-53,-59,59,-58,59,59,59,]),'CARETEQ':([17,21,23,24,25,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,106,115,123,127,132,],[60,-57,-54,-55,-56,60,60,60,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,60,60,60,-41,-42,-43,-44,60,60,-47,-48,-49,-50,-51,-52,-53,-59,60,-58,60,60,60,]),'COLON':([21,23,24,25,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,105,115,123,],[-57,-54,-55,-56,-62,108,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,110,-47,-48,-49,-50,-51,-52,-53,-59,-58,-46,]),'COMMA':([21,23,24,25,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,105,106,115,117,118,119,120,121,122,123,],[-57,-54,-55,-56,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-59,116,-58,129,-63,-64,-65,-66,-67,-46,]),'RIGHTPARENTHESES':([21,23,24,25,29,64,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,104,105,106,115,117,118,119,120,121,122,123,128,131,132,136,],[-57,-54,-55,-56,70,105,-62,109,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,115,-59,-61,-58,-10,-63,-64,-65,-66,-67,-46,-60,-11,133,137,]),'DOTDOT':([21,23,24,25,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,94,95,96,97,98,105,115,123,127,],[-57,-54,-55,-56,-62,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-49,-50,-51,-52,-53,-59,-58,-46,130,]),'ELSE':([30,32,99,100,101,102,107,124,125,126,],[-14,-17,-18,-15,-16,111,-23,-20,-22,-21,]),'IN':([63,],[103,]),'ITT':([108,],[118,]),'UTT':([108,],[119,]),'FTT':([108,],[120,]),'STRING':([108,],[121,]),'CHAR':([108,],[122,]),'DOT':([133,],[134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,],[1,7,8,]),'funcdecl':([0,2,3,],[2,2,2,]),'declvar':([0,2,3,],[3,3,3,]),'signature':([0,2,3,],[4,4,4,]),'body':([4,61,62,112,113,],[9,101,101,125,126,]),'assign':([5,10,12,16,18,19,22,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,111,114,116,130,],[11,24,27,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'stms':([10,16,],[15,31,]),'stm':([10,16,61,62,111,],[16,16,100,100,124,]),'exp':([10,16,18,19,22,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,111,114,116,130,],[17,17,61,62,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,17,17,106,123,17,127,106,132,]),'call':([10,16,18,19,22,28,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,110,111,114,116,130,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'sigparams':([29,129,],[69,131,]),'bodyorstm':([61,62,],[99,102,]),'params':([64,116,],[104,128,]),'stm2':([103,],[113,]),'tipo':([108,],[117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funcdecl','program',1,'p_program','ExpressionLanguageParser.py',6),
  ('program -> funcdecl program','program',2,'p_program','ExpressionLanguageParser.py',7),
  ('program -> declvar','program',1,'p_program','ExpressionLanguageParser.py',8),
  ('program -> declvar program','program',2,'p_program','ExpressionLanguageParser.py',9),
  ('declvar -> LET assign SEMI','declvar',3,'p_declvar','ExpressionLanguageParser.py',15),
  ('declvar -> LET MUT assign SEMI','declvar',4,'p_declvar','ExpressionLanguageParser.py',16),
  ('funcdecl -> signature body','funcdecl',2,'p_funcdecl','ExpressionLanguageParser.py',22),
  ('signature -> FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES','signature',5,'p_signature','ExpressionLanguageParser.py',28),
  ('signature -> FN ID LEFTPARENTHESES RIGHTPARENTHESES','signature',4,'p_signature','ExpressionLanguageParser.py',29),
  ('sigparams -> ID COLON tipo','sigparams',3,'p_sigparams','ExpressionLanguageParser.py',35),
  ('sigparams -> ID COLON tipo COMMA sigparams','sigparams',5,'p_sigparams','ExpressionLanguageParser.py',36),
  ('stms -> stm','stms',1,'p_stms','ExpressionLanguageParser.py',42),
  ('stms -> stm stms','stms',2,'p_stms','ExpressionLanguageParser.py',43),
  ('body -> LEFTBRACKET stms RIGHTBRACKET','body',3,'p_body','ExpressionLanguageParser.py',49),
  ('bodyorstm -> stm','bodyorstm',1,'p_bodyorstm','ExpressionLanguageParser.py',55),
  ('bodyorstm -> body','bodyorstm',1,'p_bodyorstm','ExpressionLanguageParser.py',56),
  ('stm -> exp SEMI','stm',2,'p_stm','ExpressionLanguageParser.py',62),
  ('stm -> WHILE exp bodyorstm','stm',3,'p_stm','ExpressionLanguageParser.py',63),
  ('stm -> IF exp bodyorstm','stm',3,'p_stm','ExpressionLanguageParser.py',64),
  ('stm -> IF exp bodyorstm ELSE stm','stm',5,'p_stm','ExpressionLanguageParser.py',65),
  ('stm -> FOR ID IN stm2 body','stm',5,'p_stm','ExpressionLanguageParser.py',66),
  ('stm -> FOR ID IN ID body','stm',5,'p_stm','ExpressionLanguageParser.py',67),
  ('stm -> RETURN exp SEMI','stm',3,'p_stm','ExpressionLanguageParser.py',68),
  ('stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES','stm2',5,'p_stm2','ExpressionLanguageParser.py',74),
  ('stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES','stm2',9,'p_stm2','ExpressionLanguageParser.py',75),
  ('exp -> exp PLUS exp','exp',3,'p_exp','ExpressionLanguageParser.py',109),
  ('exp -> exp MINUS exp','exp',3,'p_exp','ExpressionLanguageParser.py',110),
  ('exp -> exp STAR exp','exp',3,'p_exp','ExpressionLanguageParser.py',111),
  ('exp -> exp CARET exp','exp',3,'p_exp','ExpressionLanguageParser.py',112),
  ('exp -> exp SLASH exp','exp',3,'p_exp','ExpressionLanguageParser.py',113),
  ('exp -> exp PERCENT exp','exp',3,'p_exp','ExpressionLanguageParser.py',114),
  ('exp -> exp AND exp','exp',3,'p_exp','ExpressionLanguageParser.py',115),
  ('exp -> exp OR exp','exp',3,'p_exp','ExpressionLanguageParser.py',116),
  ('exp -> exp GE exp','exp',3,'p_exp','ExpressionLanguageParser.py',117),
  ('exp -> exp GT exp','exp',3,'p_exp','ExpressionLanguageParser.py',118),
  ('exp -> exp LE exp','exp',3,'p_exp','ExpressionLanguageParser.py',119),
  ('exp -> exp LT exp','exp',3,'p_exp','ExpressionLanguageParser.py',120),
  ('exp -> exp AS exp','exp',3,'p_exp','ExpressionLanguageParser.py',121),
  ('exp -> exp IS exp','exp',3,'p_exp','ExpressionLanguageParser.py',122),
  ('exp -> exp ISEXCLAMATION exp','exp',3,'p_exp','ExpressionLanguageParser.py',123),
  ('exp -> exp EQEQ exp','exp',3,'p_exp','ExpressionLanguageParser.py',124),
  ('exp -> exp NE exp','exp',3,'p_exp','ExpressionLanguageParser.py',125),
  ('exp -> exp ANDAND exp','exp',3,'p_exp','ExpressionLanguageParser.py',126),
  ('exp -> exp OROR exp','exp',3,'p_exp','ExpressionLanguageParser.py',127),
  ('exp -> exp QUESTIONQUESTION exp','exp',3,'p_exp','ExpressionLanguageParser.py',128),
  ('exp -> exp QUESTION exp COLON exp','exp',5,'p_exp','ExpressionLanguageParser.py',129),
  ('exp -> exp EQ exp','exp',3,'p_exp','ExpressionLanguageParser.py',130),
  ('exp -> exp STAREQ exp','exp',3,'p_exp','ExpressionLanguageParser.py',131),
  ('exp -> exp SLASHEQ exp','exp',3,'p_exp','ExpressionLanguageParser.py',132),
  ('exp -> exp PLUSEQ exp','exp',3,'p_exp','ExpressionLanguageParser.py',133),
  ('exp -> exp MINUSEQ exp','exp',3,'p_exp','ExpressionLanguageParser.py',134),
  ('exp -> exp ANDEQ exp','exp',3,'p_exp','ExpressionLanguageParser.py',135),
  ('exp -> exp CARETEQ exp','exp',3,'p_exp','ExpressionLanguageParser.py',136),
  ('exp -> call','exp',1,'p_exp','ExpressionLanguageParser.py',137),
  ('exp -> assign','exp',1,'p_exp','ExpressionLanguageParser.py',138),
  ('exp -> NUMBER','exp',1,'p_exp','ExpressionLanguageParser.py',139),
  ('exp -> ID','exp',1,'p_exp','ExpressionLanguageParser.py',140),
  ('call -> ID LEFTPARENTHESES params RIGHTPARENTHESES','call',4,'p_call','ExpressionLanguageParser.py',146),
  ('call -> ID LEFTPARENTHESES RIGHTPARENTHESES','call',3,'p_call','ExpressionLanguageParser.py',147),
  ('params -> exp COMMA params','params',3,'p_params','ExpressionLanguageParser.py',153),
  ('params -> exp','params',1,'p_params','ExpressionLanguageParser.py',154),
  ('assign -> ID EQ exp','assign',3,'p_assign','ExpressionLanguageParser.py',160),
  ('tipo -> ITT','tipo',1,'p_tipo','ExpressionLanguageParser.py',166),
  ('tipo -> UTT','tipo',1,'p_tipo','ExpressionLanguageParser.py',167),
  ('tipo -> FTT','tipo',1,'p_tipo','ExpressionLanguageParser.py',168),
  ('tipo -> STRING','tipo',1,'p_tipo','ExpressionLanguageParser.py',169),
  ('tipo -> CHAR','tipo',1,'p_tipo','ExpressionLanguageParser.py',170),
]
