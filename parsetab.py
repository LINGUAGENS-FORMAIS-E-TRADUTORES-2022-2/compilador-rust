
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANDAND ANDEQ AS ASYNC AT AWAIT BREAK CARET CARETEQ CHAR COLON COMMA CONST CONTINUE CRATE DEDENT DOLLAR DOT DOTDOT DOTDOTDOT DOTDOTEQ DYN ELSE ENUM EQ EQEQ EXTERN FALSE FATARROW FN FOR FTT GE GT ID IDENT IF IMPL IN IS ISEXCLAMATION ITT LE LEFTBRACKET LEFTPARENTHESES LET LOOP LT MATCH MINUS MINUSEQ MOD MOVE MUT NE NOT NUMBER OR OREQ OROR PATHSEP PERCENT PERCENTEQ PLUS PLUSEQ POUND PUB QUESTION QUESTIONQUESTION RARROW REF RETURN RIGHTBRACKET RIGHTPARENTHESES SELFLOWERCASE SELFUPERCASE SEMI SHL SHLEQ SHR SHREQ SLASH SLASHEQ STAR STAREQ STATIC STRING STRUCT SUPER TILDE TRAIT TRUE TYPE UNDERSCORE UNION UNSAFE USE UTT WHERE WHILEprogram : funcdecl\n                | funcdecl program\n                | declvar \n                | declvar program\n    declvar : LET assign SEMI \n                | LET MUT assign SEMI\n    funcdecl : signature bodysignature : FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES\n                | FN ID LEFTPARENTHESES RIGHTPARENTHESES\n    sigparams : ID COLON tipo\n                | ID COLON tipo COMMA sigparams\n    stms : stm  \n            | program\n            | stm  stms\n    body : LEFTBRACKET stms RIGHTBRACKET\n    bodyorstm : stm \n                | body\n\n    stm : exp SEMI\n    stm : assign SEMI\n    stm : WHILE exp bodyorstm\n     stm : IF exp bodyorstm \n     stm :  IF exp bodyorstm ELSE stm \n     stm : FOR ID IN stm2 body\n     stm : FOR ID IN ID body \n     stm : RETURN exp SEMI\n    stm2 : LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES\n            | LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES\n     exp : exp STAR exp1\n             | exp1\n     exp : exp SLASH exp1\n\n     exp : exp PERCENT exp1             \n    exp1 : exp1 PLUS exp2\n            | exp2\n    exp1 : exp1 MINUS exp2\n    exp2 : exp2 AND exp3\n            | exp3            \n     exp3 : exp3 CARET exp4\n             | exp4       \n    exp4 : exp4 OR exp5\n            | exp5             \n     exp5 : exp5 EQEQ exp6\n            | exp6\n\n    exp5 : exp5 NE exp6      \n    exp5 : exp5 LT exp6     \n    exp5 : exp5 GT exp6     \n     exp5 : exp5 GE exp6      \n     exp5 : exp5 LE exp6      \n    exp6 : exp6 ANDAND exp7\n            | exp7\n    exp7 : exp7 OROR exp8\n            | exp8\n    exp8 : NUMBER\n\n     exp8 : ID     \n     exp8 : call     \n    call : ID LEFTPARENTHESES params RIGHTPARENTHESES\n            | ID LEFTPARENTHESES RIGHTPARENTHESES\n    params : exp COMMA params \n                | exp\n    assign : ID EQ exp\n    tipo : ITT\n            | UTT\n            | FTT\n            | STRING\n            | CHAR\n    '
    
_lr_action_items = {'LET':([0,2,3,9,10,16,35,39,41,45,65,73,74,75,76,81,109,110,111,],[5,5,5,-7,5,5,-5,-15,-18,-19,-6,-20,-16,-17,-21,-25,-22,-24,-23,]),'FN':([0,2,3,9,10,16,35,39,41,45,65,73,74,75,76,81,109,110,111,],[6,6,6,-7,6,6,-5,-15,-18,-19,-6,-20,-16,-17,-21,-25,-22,-24,-23,]),'$end':([1,2,3,7,8,9,35,39,65,],[0,-1,-3,-2,-4,-7,-5,-15,-6,]),'RIGHTBRACKET':([2,3,7,8,9,15,16,17,35,39,40,41,45,65,73,74,75,76,81,109,110,111,],[-1,-3,-2,-4,-7,39,-12,-13,-5,-15,-14,-18,-19,-6,-20,-16,-17,-21,-25,-22,-24,-23,]),'LEFTBRACKET':([4,25,26,27,28,29,30,31,32,33,34,46,47,48,69,70,71,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,101,118,122,],[10,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,10,-53,10,-9,-28,-30,-31,-56,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-8,10,10,-55,-26,-27,]),'MUT':([5,],[12,]),'ID':([5,6,10,12,16,20,21,22,24,25,26,27,28,29,30,31,32,33,34,37,38,39,41,42,43,44,45,46,47,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,70,71,72,73,74,75,76,77,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,101,102,109,110,111,114,115,119,],[13,14,23,13,23,47,47,49,47,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,47,67,-15,-18,47,47,47,-19,23,-53,23,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-28,-30,-31,-20,-16,-17,-21,98,-56,-25,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,23,47,-55,47,-22,-24,-23,67,47,120,]),'WHILE':([10,16,25,26,27,28,29,30,31,32,33,34,39,41,45,46,47,48,70,71,72,73,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,101,109,110,111,],[20,20,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,-15,-18,-19,20,-53,20,-28,-30,-31,-20,-16,-17,-21,-56,-25,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,20,-55,-22,-24,-23,]),'IF':([10,16,25,26,27,28,29,30,31,32,33,34,39,41,45,46,47,48,70,71,72,73,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,101,109,110,111,],[21,21,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,-15,-18,-19,21,-53,21,-28,-30,-31,-20,-16,-17,-21,-56,-25,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,21,-55,-22,-24,-23,]),'FOR':([10,16,25,26,27,28,29,30,31,32,33,34,39,41,45,46,47,48,70,71,72,73,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,101,109,110,111,],[22,22,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,-15,-18,-19,22,-53,22,-28,-30,-31,-20,-16,-17,-21,-56,-25,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,22,-55,-22,-24,-23,]),'RETURN':([10,16,25,26,27,28,29,30,31,32,33,34,39,41,45,46,47,48,70,71,72,73,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,101,109,110,111,],[24,24,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,-15,-18,-19,24,-53,24,-28,-30,-31,-20,-16,-17,-21,-56,-25,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,24,-55,-22,-24,-23,]),'NUMBER':([10,16,20,21,24,25,26,27,28,29,30,31,32,33,34,37,39,41,42,43,44,45,46,47,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,70,71,72,73,74,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,101,102,109,110,111,115,],[33,33,33,33,33,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,33,-15,-18,33,33,33,-19,33,-53,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-28,-30,-31,-20,-16,-17,-21,-56,-25,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,33,33,-55,33,-22,-24,-23,33,]),'SEMI':([11,18,19,23,25,26,27,28,29,30,31,32,33,34,36,47,51,66,70,71,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,101,],[35,41,45,-53,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,65,-53,81,-59,-28,-30,-31,-56,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'EQ':([13,23,],[37,37,]),'LEFTPARENTHESES':([14,23,47,77,120,],[38,50,50,100,121,]),'STAR':([18,23,25,26,27,28,29,30,31,32,33,34,46,47,48,51,66,70,71,72,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,101,112,117,],[42,-53,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,42,-53,42,42,42,-28,-30,-31,-56,42,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,42,42,]),'SLASH':([18,23,25,26,27,28,29,30,31,32,33,34,46,47,48,51,66,70,71,72,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,101,112,117,],[43,-53,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,43,-53,43,43,43,-28,-30,-31,-56,43,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,43,43,]),'PERCENT':([18,23,25,26,27,28,29,30,31,32,33,34,46,47,48,51,66,70,71,72,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,101,112,117,],[44,-53,-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,44,-53,44,44,44,-28,-30,-31,-56,44,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,44,44,]),'OROR':([23,31,32,33,34,47,79,93,94,101,],[-53,64,-51,-52,-54,-53,-56,64,-50,-55,]),'ANDAND':([23,30,31,32,33,34,47,79,87,88,89,90,91,92,93,94,101,],[-53,63,-49,-51,-52,-54,-53,-56,63,63,63,63,63,63,-48,-50,-55,]),'EQEQ':([23,29,30,31,32,33,34,47,79,86,87,88,89,90,91,92,93,94,101,],[-53,57,-42,-49,-51,-52,-54,-53,-56,57,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'NE':([23,29,30,31,32,33,34,47,79,86,87,88,89,90,91,92,93,94,101,],[-53,58,-42,-49,-51,-52,-54,-53,-56,58,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'LT':([23,29,30,31,32,33,34,47,79,86,87,88,89,90,91,92,93,94,101,],[-53,59,-42,-49,-51,-52,-54,-53,-56,59,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'GT':([23,29,30,31,32,33,34,47,79,86,87,88,89,90,91,92,93,94,101,],[-53,60,-42,-49,-51,-52,-54,-53,-56,60,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'GE':([23,29,30,31,32,33,34,47,79,86,87,88,89,90,91,92,93,94,101,],[-53,61,-42,-49,-51,-52,-54,-53,-56,61,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'LE':([23,29,30,31,32,33,34,47,79,86,87,88,89,90,91,92,93,94,101,],[-53,62,-42,-49,-51,-52,-54,-53,-56,62,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'OR':([23,28,29,30,31,32,33,34,47,79,85,86,87,88,89,90,91,92,93,94,101,],[-53,56,-40,-42,-49,-51,-52,-54,-53,-56,56,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'CARET':([23,27,28,29,30,31,32,33,34,47,79,84,85,86,87,88,89,90,91,92,93,94,101,],[-53,55,-38,-40,-42,-49,-51,-52,-54,-53,-56,55,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'AND':([23,26,27,28,29,30,31,32,33,34,47,79,82,83,84,85,86,87,88,89,90,91,92,93,94,101,],[-53,54,-36,-38,-40,-42,-49,-51,-52,-54,-53,-56,54,54,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'PLUS':([23,25,26,27,28,29,30,31,32,33,34,47,70,71,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,101,],[-53,52,-33,-36,-38,-40,-42,-49,-51,-52,-54,-53,52,52,52,-56,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'MINUS':([23,25,26,27,28,29,30,31,32,33,34,47,70,71,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,101,],[-53,53,-33,-36,-38,-40,-42,-49,-51,-52,-54,-53,53,53,53,-56,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,]),'COMMA':([25,26,27,28,29,30,31,32,33,34,47,70,71,72,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,101,103,104,105,106,107,108,],[-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,-53,-28,-30,-31,-56,102,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,114,-60,-61,-62,-63,-64,]),'RIGHTPARENTHESES':([25,26,27,28,29,30,31,32,33,34,38,47,50,68,70,71,72,78,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,101,103,104,105,106,107,108,113,116,117,121,],[-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,69,-53,79,96,-28,-30,-31,101,-56,-58,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,-10,-60,-61,-62,-63,-64,-57,-11,118,122,]),'DOTDOT':([25,26,27,28,29,30,31,32,33,34,47,70,71,72,79,82,83,84,85,86,87,88,89,90,91,92,93,94,101,112,],[-29,-33,-36,-38,-40,-42,-49,-51,-52,-54,-53,-28,-30,-31,-56,-32,-34,-35,-37,-39,-41,-43,-44,-45,-46,-47,-48,-50,-55,115,]),'ELSE':([39,41,45,73,74,75,76,81,109,110,111,],[-15,-18,-19,-20,-16,-17,97,-25,-22,-24,-23,]),'IN':([49,],[77,]),'COLON':([67,],[95,]),'ITT':([95,],[104,]),'UTT':([95,],[105,]),'FTT':([95,],[106,]),'STRING':([95,],[107,]),'CHAR':([95,],[108,]),'DOT':([118,],[119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,3,10,16,],[1,7,8,17,17,]),'funcdecl':([0,2,3,10,16,],[2,2,2,2,2,]),'declvar':([0,2,3,10,16,],[3,3,3,3,3,]),'signature':([0,2,3,10,16,],[4,4,4,4,4,]),'body':([4,46,48,98,99,],[9,75,75,110,111,]),'assign':([5,10,12,16,46,48,97,],[11,19,36,19,19,19,19,]),'stms':([10,16,],[15,40,]),'stm':([10,16,46,48,97,],[16,16,74,74,109,]),'exp':([10,16,20,21,24,37,46,48,50,97,100,102,115,],[18,18,46,48,51,66,18,18,80,18,112,80,117,]),'exp1':([10,16,20,21,24,37,42,43,44,46,48,50,97,100,102,115,],[25,25,25,25,25,25,70,71,72,25,25,25,25,25,25,25,]),'exp2':([10,16,20,21,24,37,42,43,44,46,48,50,52,53,97,100,102,115,],[26,26,26,26,26,26,26,26,26,26,26,26,82,83,26,26,26,26,]),'exp3':([10,16,20,21,24,37,42,43,44,46,48,50,52,53,54,97,100,102,115,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,84,27,27,27,27,]),'exp4':([10,16,20,21,24,37,42,43,44,46,48,50,52,53,54,55,97,100,102,115,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,85,28,28,28,28,]),'exp5':([10,16,20,21,24,37,42,43,44,46,48,50,52,53,54,55,56,97,100,102,115,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,86,29,29,29,29,]),'exp6':([10,16,20,21,24,37,42,43,44,46,48,50,52,53,54,55,56,57,58,59,60,61,62,97,100,102,115,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,87,88,89,90,91,92,30,30,30,30,]),'exp7':([10,16,20,21,24,37,42,43,44,46,48,50,52,53,54,55,56,57,58,59,60,61,62,63,97,100,102,115,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,93,31,31,31,31,]),'exp8':([10,16,20,21,24,37,42,43,44,46,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,97,100,102,115,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,94,32,32,32,32,]),'call':([10,16,20,21,24,37,42,43,44,46,48,50,52,53,54,55,56,57,58,59,60,61,62,63,64,97,100,102,115,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'sigparams':([38,114,],[68,116,]),'bodyorstm':([46,48,],[73,76,]),'params':([50,102,],[78,113,]),'stm2':([77,],[99,]),'tipo':([95,],[103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> funcdecl','program',1,'p_program','ExpressionLanguageParser.py',7),
  ('program -> funcdecl program','program',2,'p_program','ExpressionLanguageParser.py',8),
  ('program -> declvar','program',1,'p_program','ExpressionLanguageParser.py',9),
  ('program -> declvar program','program',2,'p_program','ExpressionLanguageParser.py',10),
  ('declvar -> LET assign SEMI','declvar',3,'p_DecDeclvar','ExpressionLanguageParser.py',19),
  ('declvar -> LET MUT assign SEMI','declvar',4,'p_DecDeclvar','ExpressionLanguageParser.py',20),
  ('funcdecl -> signature body','funcdecl',2,'p_funcdecl','ExpressionLanguageParser.py',29),
  ('signature -> FN ID LEFTPARENTHESES sigparams RIGHTPARENTHESES','signature',5,'p_signature','ExpressionLanguageParser.py',34),
  ('signature -> FN ID LEFTPARENTHESES RIGHTPARENTHESES','signature',4,'p_signature','ExpressionLanguageParser.py',35),
  ('sigparams -> ID COLON tipo','sigparams',3,'p_sigparams','ExpressionLanguageParser.py',44),
  ('sigparams -> ID COLON tipo COMMA sigparams','sigparams',5,'p_sigparams','ExpressionLanguageParser.py',45),
  ('stms -> stm','stms',1,'p_stms','ExpressionLanguageParser.py',55),
  ('stms -> program','stms',1,'p_stms','ExpressionLanguageParser.py',56),
  ('stms -> stm stms','stms',2,'p_stms','ExpressionLanguageParser.py',57),
  ('body -> LEFTBRACKET stms RIGHTBRACKET','body',3,'p_body','ExpressionLanguageParser.py',66),
  ('bodyorstm -> stm','bodyorstm',1,'p_bodyorstm','ExpressionLanguageParser.py',72),
  ('bodyorstm -> body','bodyorstm',1,'p_bodyorstm','ExpressionLanguageParser.py',73),
  ('stm -> exp SEMI','stm',2,'p_stm_semi','ExpressionLanguageParser.py',80),
  ('stm -> assign SEMI','stm',2,'p_stm_assign','ExpressionLanguageParser.py',86),
  ('stm -> WHILE exp bodyorstm','stm',3,'p_stm_while','ExpressionLanguageParser.py',92),
  ('stm -> IF exp bodyorstm','stm',3,'p_stm_if','ExpressionLanguageParser.py',98),
  ('stm -> IF exp bodyorstm ELSE stm','stm',5,'p_stm_if2','ExpressionLanguageParser.py',104),
  ('stm -> FOR ID IN stm2 body','stm',5,'p_stm_for','ExpressionLanguageParser.py',110),
  ('stm -> FOR ID IN ID body','stm',5,'p_stm_for2','ExpressionLanguageParser.py',116),
  ('stm -> RETURN exp SEMI','stm',3,'p_stm_return','ExpressionLanguageParser.py',122),
  ('stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES','stm2',5,'p_stm2','ExpressionLanguageParser.py',128),
  ('stm2 -> LEFTPARENTHESES exp DOTDOT exp RIGHTPARENTHESES DOT ID LEFTPARENTHESES RIGHTPARENTHESES','stm2',9,'p_stm2','ExpressionLanguageParser.py',129),
  ('exp -> exp STAR exp1','exp',3,'p_exp_star','ExpressionLanguageParser.py',135),
  ('exp -> exp1','exp',1,'p_exp_star','ExpressionLanguageParser.py',136),
  ('exp -> exp SLASH exp1','exp',3,'p_exp_slash','ExpressionLanguageParser.py',145),
  ('exp -> exp PERCENT exp1','exp',3,'p_exp_percent','ExpressionLanguageParser.py',152),
  ('exp1 -> exp1 PLUS exp2','exp1',3,'p_exp_plus','ExpressionLanguageParser.py',158),
  ('exp1 -> exp2','exp1',1,'p_exp_plus','ExpressionLanguageParser.py',159),
  ('exp1 -> exp1 MINUS exp2','exp1',3,'p_exp_minus','ExpressionLanguageParser.py',168),
  ('exp2 -> exp2 AND exp3','exp2',3,'p_exp_and','ExpressionLanguageParser.py',177),
  ('exp2 -> exp3','exp2',1,'p_exp_and','ExpressionLanguageParser.py',178),
  ('exp3 -> exp3 CARET exp4','exp3',3,'p_exp_caret','ExpressionLanguageParser.py',184),
  ('exp3 -> exp4','exp3',1,'p_exp_caret','ExpressionLanguageParser.py',185),
  ('exp4 -> exp4 OR exp5','exp4',3,'p_exp_or','ExpressionLanguageParser.py',194),
  ('exp4 -> exp5','exp4',1,'p_exp_or','ExpressionLanguageParser.py',195),
  ('exp5 -> exp5 EQEQ exp6','exp5',3,'p_exp_assign','ExpressionLanguageParser.py',201),
  ('exp5 -> exp6','exp5',1,'p_exp_assign','ExpressionLanguageParser.py',202),
  ('exp5 -> exp5 NE exp6','exp5',3,'p_exp_ne','ExpressionLanguageParser.py',209),
  ('exp5 -> exp5 LT exp6','exp5',3,'p_exp_lt','ExpressionLanguageParser.py',215),
  ('exp5 -> exp5 GT exp6','exp5',3,'p_exp_gt','ExpressionLanguageParser.py',221),
  ('exp5 -> exp5 GE exp6','exp5',3,'p_exp_ge','ExpressionLanguageParser.py',227),
  ('exp5 -> exp5 LE exp6','exp5',3,'p_exp_le','ExpressionLanguageParser.py',233),
  ('exp6 -> exp6 ANDAND exp7','exp6',3,'p_exp_andand','ExpressionLanguageParser.py',239),
  ('exp6 -> exp7','exp6',1,'p_exp_andand','ExpressionLanguageParser.py',240),
  ('exp7 -> exp7 OROR exp8','exp7',3,'p_exp_oror','ExpressionLanguageParser.py',246),
  ('exp7 -> exp8','exp7',1,'p_exp_oror','ExpressionLanguageParser.py',247),
  ('exp8 -> NUMBER','exp8',1,'p_exp_number','ExpressionLanguageParser.py',253),
  ('exp8 -> ID','exp8',1,'p_exp_id','ExpressionLanguageParser.py',260),
  ('exp8 -> call','exp8',1,'p_exp_call','ExpressionLanguageParser.py',266),
  ('call -> ID LEFTPARENTHESES params RIGHTPARENTHESES','call',4,'p_call','ExpressionLanguageParser.py',284),
  ('call -> ID LEFTPARENTHESES RIGHTPARENTHESES','call',3,'p_call','ExpressionLanguageParser.py',285),
  ('params -> exp COMMA params','params',3,'p_params','ExpressionLanguageParser.py',294),
  ('params -> exp','params',1,'p_params','ExpressionLanguageParser.py',295),
  ('assign -> ID EQ exp','assign',3,'p_assign','ExpressionLanguageParser.py',304),
  ('tipo -> ITT','tipo',1,'p_tipo','ExpressionLanguageParser.py',310),
  ('tipo -> UTT','tipo',1,'p_tipo','ExpressionLanguageParser.py',311),
  ('tipo -> FTT','tipo',1,'p_tipo','ExpressionLanguageParser.py',312),
  ('tipo -> STRING','tipo',1,'p_tipo','ExpressionLanguageParser.py',313),
  ('tipo -> CHAR','tipo',1,'p_tipo','ExpressionLanguageParser.py',314),
]
